{"version":3,"sources":["components/StartMenu/assets/pokeheader.png","components/StartMenu/assets/poketeam.png","containers/App/getRandomPokeIds.js","containers/App/getPokeURLs.js","containers/App/stealPoke.js","components/Filler/Filler.js","components/ProgressBar/ProgressBar.js","components/Pokemon/Pokemon.js","components/PokeballLoader/PokeballLoader.js","components/PokeballArray/PokeballArray.js","components/PokemonTeam/PokemonTeam.js","containers/App/getStat.js","components/TeamStats/TeamStats.js","components/StartMenu/StartMenu.js","actions.js","constants.js","containers/App/App.js","serviceWorker.js","containers/App/getPower.js","reducers.js","index.js"],"names":["module","exports","getRandomIds","number","numArray","i","num","Math","floor","random","push","createPokeURLs","array","arrayURL","forEach","value","url","stealPoke","arrayPlayer","changeNumPlayer","arrayEnemy","changeNumEnemy","indexEnemy","indexPlayer","arrIndexPlayer","arrIndexEnemy","length","id","indexOf","Number","arr","arr1","splice","Filler","props","colorFiller","percentage","colormatch","className","style","width","ProgressBar","Pokemon","name","height","weight","energy","alt","src","charAt","toUpperCase","slice","Pokeball","PokeballArray","pokemonlist","map","pokemon","key","PokemonTeam","status","getStat","stat","statistic","pokeEnergy","statArray","stats","statfield","base_stat","TeamStats","totalSpeed","totalSpecDef","totalSpecAttack","totalDefense","totalAttack","totalHp","StartMenu","onStartGameClick","onStartGame","require","onClick","this","Component","connect","state","screen","currentTurn","dispatch","type","payload","mainprompt","turn","App","onMainMenuButtonClick","onRequestPokemonPlayer","onCurrentScore","onRoundLoss","onRequestPokemonEnemy","onLaunchMenu","onRefreshButtonClick","onBattleButtonClick","PlayerTeam","EnemyTeam","score","TotalPlayerPower","TotalEnemyPower","onRoundWin","pokeSteal","window","prompt","pokeDiscard","onStealPokemon","onPokeStolen","onWinRound","isPendingPlayer","isPendingEnemy","requestPokemonPlayer","pokemonlistPlayer","totalPlayerPower","isPending","requestPokemonEnemy","pokemonlistEnemy","totalEnemyPower","errorPlayer","error","errorEnemy","currentScore","pokeIdsPlayer","pokeURLsPlayer","setTimeout","Promise","all","fetch","then","resp","r","json","v","data","catch","pokeIdsEnemy","winRound","stealPokemon","arrayPoke","newEnergy","reducePower","roundWin","Boolean","location","hostname","match","getPower","initialStatePlayerPokemon","initialStateEnemyPokemon","initialStateScore","initialStateTurn","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"oSAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,0JCA9BC,EAAe,SAACC,GAEzB,IADA,IAAIC,EAAW,GACNC,EAAE,EAAGA,EAAEF,EAAQE,IAAK,CAC3B,IAAIC,EAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EAC5CL,EAASM,KAAKJ,GAEhB,OAAOF,GCJEO,EAAiB,SAACC,GAC3B,IAAMC,EAAW,GASjB,OADAD,EAAME,SANS,SAACC,GACd,IACIC,EAAG,4CADED,EACF,KAEP,OADAF,EAASH,KAAKM,GACPH,KAGFA,GCZEI,EAAY,SAACC,EAAaC,EAAiBC,EAAYC,GAQhE,IANA,IAAIC,GAAc,EACdC,GAAe,EAEfC,EAAiB,GACjBC,EAAgB,GAEXpB,EAAI,EAAGA,EAAEa,EAAYQ,OAAQrB,IAClCmB,EAAed,KAAKQ,EAAYb,GAAGsB,IAGvC,IAAK,IAAItB,EAAI,EAAGA,EAAEe,EAAWM,OAAQrB,IACjCoB,EAAcf,KAAKU,EAAWf,GAAGsB,IAGrC,IAAiD,IAA7CH,EAAeI,QAAQT,KAAwE,IAA3CM,EAAcG,QAAQP,GAC1E,OAAOH,EAGH,IAAK,IAAIb,EAAI,EAAGA,EAAEe,EAAWM,OAAQrB,IACjC,GAAGwB,OAAOT,EAAWf,GAAGsB,MAAQN,EAAe,CAC3CC,EAAajB,EACb,MAIR,IAAK,IAAIA,EAAI,EAAGA,EAAEa,EAAYQ,OAAQrB,IAClC,GAAGa,EAAYb,GAAGsB,KAAOR,EAAgB,CACrCI,EAAclB,EACd,MAIZ,IAAIyB,EAAMV,EAAWE,GACjBS,EAAOb,EAEAa,EAAKC,OAAOT,EAAa,EAAGO,GAEvC,OAAOC,GCbEE,G,YAvBF,SAACC,GACZ,IAiBIC,EAjBe,SAACD,GAClB,IACI5B,EAAMuB,OAAOK,EAAME,YACvB,OAAI9B,EAAM,GACH,QAGDA,EAAM,GACH,SAGA,MAMO+B,CAAWH,GAE7B,OAAO,yBAAKI,UAAW,UAAkBH,EAAcI,MAAO,CAAEC,MAAM,GAAD,OAAKN,EAAME,WAAX,OAA6B,wCAAcF,EAAME,WAApB,QCXvFK,G,MARK,SAACP,GACjB,OACI,yBAAKI,UAAU,gBACX,kBAAC,EAAD,CAAQF,WAAYF,EAAME,gBCavBM,EAhBC,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,KAAMhB,EAAgC,EAAhCA,GAAIiB,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAExC,OACI,yBAAKR,UAAU,uCAAuCX,GAAG,QACrD,yBAAKA,GAAG,OAAOoB,IAAI,UAAUC,IAAG,mFAA8ErB,EAA9E,UAChC,6BACI,4BAAKgB,EAAKM,OAAO,GAAGC,cAAeP,EAAKQ,MAAM,IAC9C,mCAASxB,GACT,uCAAaiB,GACb,uCAAaC,GACb,kBAAC,EAAD,CAAaT,WAAYU,OCJ1BM,G,MAPE,WAEb,OACI,yBAAKd,UAAU,uCCURe,EAZO,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACjB,OACI,kBAAC,WAAD,KAEQA,EAAYC,KAAK,SAACC,EAAQnD,GACzB,OAAQ,kBAAC,EAAD,CAAUoD,IAAMpD,SC2B7BqD,EAhCK,SAAC,GAA6B,IAA3BJ,EAA0B,EAA1BA,YAGnB,OAH6C,EAAbK,OAKxB,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAeL,YAAeA,KAKlC,kBAAC,WAAD,KAEIA,EAAYC,KAAI,SAACC,EAASnD,GACtB,OACC,kBAAC,EAAD,CACGoD,IAAKpD,EACLsC,KAAMW,EAAYjD,GAAGsC,KACrBhB,GAAI2B,EAAYjD,GAAGsB,GACnBiB,OAAQU,EAAYjD,GAAGuC,OACvBC,OAAQS,EAAYjD,GAAGwC,OACvBC,OAAQQ,EAAYjD,GAAGyC,cCzBlCc,G,MAAU,SAACC,EAAMjD,GAC1B,IAAIkD,EAAY,EAYhB,OAXIlD,EAAME,SAAQ,SAAC0C,EAASnD,GACpB,IAAI0D,EAAanD,EAAMP,GAAGyC,OAAS,IAC/BkB,EAAYpD,EAAMP,GAAG4D,MACzBD,EAAUlD,SAAQ,SAACoD,EAAW7D,GACtB2D,EAAU3D,GAAGwD,KAAKlB,OAASkB,IAC3BC,GAAyBE,EAAU3D,GAAG8D,UAAYJ,SAM3DD,ICeIM,EAxBG,SAAC,GAAqB,IAAnBd,EAAkB,EAAlBA,YAEXe,EAAaT,EAAQ,QAASN,GAC9BgB,EAAeV,EAAQ,kBAAmBN,GAC1CiB,EAAkBX,EAAQ,iBAAkBN,GAC5CkB,EAAeZ,EAAQ,UAAWN,GAClCmB,EAAcb,EAAQ,SAAUN,GAChCoB,EAAUd,EAAQ,KAAMN,GAE9B,OACI,yBAAKhB,UAAU,kBAAkBX,GAAG,QAChC,6BACI,wBAAIA,GAAG,eAAP,cACA,sCAAa0C,GACb,gDAAsBC,EAAtB,KACA,+CAAqBC,GACrB,wCAAcC,GACd,uCAAaC,GACb,mCAASC,MCFnBC,G,kNAEFC,iBAAmB,WACf,EAAK1C,MAAM2C,e,uDAIX,OACI,kBAAC,WAAD,KACI,4BAAQvC,UAAU,cACd,mDAEH,yBAAKX,GAAG,cACD,yBAAKoB,IAAI,gBAAgBC,IAAK8B,EAAQ,OAE9C,yBAAKnD,GAAG,WACJ,yBAAKA,GAAG,UACJ,4BAAQA,GAAG,eAAeoD,QAAUC,KAAKJ,kBAAzC,uBAEJ,yBAAKjD,GAAG,UACJ,4BAAQA,GAAG,gBAAX,kBAGR,yBAAKA,GAAG,YACJ,yBAAKoB,IAAI,cAAcC,IAAK8B,EAAQ,Y,GAxBhCG,cAiCTC,eA7CS,SAAAC,GACpB,MAAO,CACHC,OAAQD,EAAME,YAAYD,WAIP,SAACE,GACxB,MAAM,CACFT,YAAa,kBAAMS,ECoEK,CAC5BC,KChE+B,sBDiE/BC,QAAS,CACLJ,OAAQ,OACRK,WAAY,yBACZC,KAAM,qBDpCCR,CAA6CP,GGZtDgB,E,4MAaJC,sBAAwB,WAEtB,EAAK1D,MAAM2D,yBACX,EAAK3D,MAAM4D,iBACX,EAAK5D,MAAM6D,cACX,EAAK7D,MAAM8D,wBACX,EAAK9D,MAAM+D,gB,EAIbC,qBAAuB,WAErB,EAAKhE,MAAM2D,yBAEX,EAAK3D,MAAM4D,iBAEX,EAAK5D,MAAM2C,e,EAGbsB,oBAAsB,WAAO,IAAD,EACmD,EAAKjE,MAA1EkE,EADkB,EAClBA,WAAYC,EADM,EACNA,UAAWC,EADL,EACKA,MAG/B,GAJ0B,EACYC,kBADZ,EAC8BC,gBAGhB,CAEhC,EAAKtE,MAAMuE,WAAWL,GACtB,IAAIM,EAAYC,OAAOC,OAAP,6BAChBF,EAAY7E,OAAO6E,GACnB,IAAIG,EAAcF,OAAOC,OAAP,+BAClBC,EAAchF,OAAQgF,GACnBH,GAAaG,IAEd,EAAK3E,MAAM4E,eAAeV,EAAYS,EAAaR,EAAWK,GAC9D,EAAKxE,MAAM6E,gBAElB,EAAK7E,MAAM8E,WAAWV,EAAM,QAI7B,EAAKpE,MAAM2D,yBACX,EAAK3D,MAAM4D,iBACX,EAAK5D,MAAM6D,cAGb,EAAK7D,MAAM8D,yB,kEArDXhB,KAAK9C,MAAM+D,eAEXjB,KAAK9C,MAAM2D,yBAEXb,KAAK9C,MAAM8D,wBAEXhB,KAAK9C,MAAM4D,mB,+BAmDH,IAAD,EACwFd,KAAK9C,MAA5FkE,EADD,EACCA,WAAYa,EADb,EACaA,gBAAiBZ,EAD9B,EAC8BA,UAAWa,EADzC,EACyCA,eAAgBZ,EADzD,EACyDA,MAAOb,EADhE,EACgEA,WAIrE,MAAe,aALV,EAC4EL,OAKxE,kBAAC,EAAD,MAGL,yBAAK9C,UAAU,OACf,4BAAQA,UAAU,cACd,kDACA,wBAAIA,UAAU,QAAQmD,GACtB,4BAAQ9D,GAAG,iBAAiBoD,QAAUC,KAAKkB,qBAAuB5D,UAAU,aAA5E,sBACA,4BAAQX,GAAG,iBAAiBoD,QAAUC,KAAKmB,oBAAsB7D,UAAU,aAA3E,UACA,4BAAQX,GAAG,iBAAiBoD,QAAUC,KAAKY,sBAAwBtD,UAAU,aAA7E,aACA,wBAAIA,UAAU,mBAAd,kBAAgDgE,IAEpD,yBAAKhE,UAAU,QACX,yCACA,yBAAKA,UAAU,WACb,kBAAC,EAAD,CAAaX,GAAG,SAAS2B,YAAa8C,EAAYzC,OAAQsD,IAC1D,kBAAC,EAAD,CAAW3D,YAAa8C,KAE1B,0CACA,yBAAK9D,UAAU,WACb,kBAAC,EAAD,CAAaX,GAAG,QAAQ2B,YAAa+C,EAAW1C,OAAQuD,IACxD,kBAAC,EAAD,CAAW5D,YAAa+C,W,GAxFtBpB,aAiGHC,eAlIS,SAAAC,GACtB,MAAM,CACJiB,WAAYjB,EAAMgC,qBAAqBC,kBACvCb,iBAAkBpB,EAAMgC,qBAAqBE,iBAC7CJ,gBAAiB9B,EAAMgC,qBAAqBG,UAC5CjB,UAAWlB,EAAMoC,oBAAoBC,iBACrChB,gBAAiBrB,EAAMoC,oBAAoBE,gBAC3CP,eAAgB/B,EAAMoC,oBAAoBD,UAC1CI,YAAavC,EAAMgC,qBAAqBQ,MACxCC,WAAYzC,EAAMoC,oBAAoBI,MACtCrB,MAAOnB,EAAM0C,aAAavB,MAC1BZ,KAAMP,EAAME,YAAYK,KACxBN,OAAQD,EAAME,YAAYD,OAC1BK,WAAYN,EAAME,YAAYI,eAKP,SAACH,GAC1B,MAAO,CACLO,uBAAwB,kBAAMP,GFLQ,SAACA,GACvCA,EAAS,CAAEC,KCvB4B,gCDwBvC,IAAMuC,EAAgB5H,EAAa,GAC7B6H,EAAiBpH,EAAemH,GAEtCE,YAAW,WAEPC,QAAQC,IAAIH,EAAexE,KAAI,SAAAvC,GAAG,OAAImH,MAAMnH,OAC3CoH,MAAK,SAAAC,GAAI,OAAGJ,QAAQC,IAAMG,EAAK9E,KAAI,SAAA+E,GAAC,OAAIA,EAAEC,cAC1CH,MAAK,SAAAE,GACN,OADyBA,EAAE/E,KAAI,SAAAiF,GAAC,kCAASA,GAAT,IAAY1F,OAAQ,YAEnDsF,MAAK,SAAAK,GAAI,OAAInD,EAAS,CAAEC,KChCU,8BDgCyBC,QAASiD,OACpEC,OAAM,SAAAf,GAAK,OAAIrC,EAAS,CAAEC,KChCO,6BDgC2BC,QAASmC,SAEvE,SERH3B,sBAAuB,kBAAMV,GFYQ,SAACA,GACtCA,EAAS,CAAEC,KCpC2B,+BDqCtC,IAAMoD,EAAezI,EAAa,GAC5B6H,EAAiBpH,EAAegI,GAEtCX,YAAW,WAEPC,QAAQC,IAAIH,EAAexE,KAAI,SAAAvC,GAAG,OAAImH,MAAMnH,OAC3CoH,MAAK,SAAAC,GAAI,OAAGJ,QAAQC,IAAMG,EAAK9E,KAAI,SAAA+E,GAAC,OAAIA,EAAEC,cAC1CH,MAAK,SAAAE,GACN,OADyBA,EAAE/E,KAAI,SAAAiF,GAAC,kCAASA,GAAT,IAAY1F,OAAQ,YAEnDsF,MAAK,SAAAK,GAAI,OAAInD,EAAS,CAAEC,KC7CS,6BD6CyBC,QAASiD,OACnEC,OAAM,SAAAf,GAAK,OAAIrC,EAAS,CAAEC,KC7CM,4BD6C2BC,QAASmC,SAEtE,SEzBH7B,eAAgB,kBAAMR,EF6BS,CAC3BC,KCjDkB,aDkDlBC,QAAS,KE9BbwB,WAAY,SAACV,GAAD,OAAWhB,EFiCH,SAAAgB,GAAK,MAAK,CAC9Bf,KCnDqB,YDoDrBe,SEnCgCsC,CAAStC,KACzCQ,eAAgB,SAAC5F,EAAaC,EAAiBC,EAAYC,GAA3C,OAA8DiE,EFqCtD,SAACpE,EAAaC,EAAiBC,EAAYC,GAA3C,MAA+D,CACnFkE,KCrDkB,aDsDlBC,QAASvE,EAAUC,EAAaC,EAAiBC,EAAYC,IEvCsBwH,CAAa3H,EAAaC,EAAiBC,EAAYC,KAC9IwD,YAAa,kBAAMS,EFmDS,CAC5BC,KChE+B,sBDiE/BC,QAAS,CACLJ,OAAQ,OACRK,WAAY,yBACZC,KAAM,kBEvDVe,WAAY,SAAC7F,GAAD,OAAW0E,EF2DH,SAAC1E,GAAD,OAAW,SAAC0E,GAWhCA,EAAS,CAAEC,KCjG2B,6BDiGOC,QATzB,SAACsD,GACjB,IAAK,IAAIzI,EAAI,EAAGA,EAAIyI,EAAUpH,OAAQrB,IAAI,CACtC,IAAI0I,EAAYD,EAAUzI,GAAGyC,OAAS,EACtCgG,EAAUzI,GAAGyC,OAASiG,EAE1B,OAAOD,EAEWE,CAAYpI,KAGlC0E,EAAS,CAACC,KCnFe,gBDmFMC,QAAS,CAACJ,OAAQ,OAAQK,WAAY,sCAAoCC,KAAM,eEvE/EuD,CAASrI,KACzCmG,aAAc,kBAAMzB,EFyES,CAC7BC,KCtF2B,kBDuF3BC,QAAS,CACLJ,OAAQ,OACRK,WAAY,kCACZC,KAAM,kBE7EVK,YAAa,kBAAMT,EFiFS,CAC5BC,KC9F0B,iBD+F1BC,QAAS,CACLJ,OAAQ,OACRK,WAAY,sCACZC,KAAM,kBErFVO,aAAc,kBAAMX,EFsCS,CAC7BC,KCxD8B,qBDyD9BC,QAAS,CACLJ,OAAQ,WACRK,WAAY,GACZC,KAAM,UE0DCR,CAA6CS,GC9HxCuD,QACW,cAA7BvC,OAAOwC,SAASC,UAEe,UAA7BzC,OAAOwC,SAASC,UAEhBzC,OAAOwC,SAASC,SAASC,MACvB,2DChBC,IAAMC,EAAW,SAAC1I,GAUnB,OARiBgD,EAAQ,QAAShD,GACbgD,EAAQ,kBAAmBhD,GACxBgD,EAAQ,iBAAkBhD,GAC7BgD,EAAQ,UAAWhD,GACpBgD,EAAQ,SAAUhD,GACtBgD,EAAQ,KAAMhD,ICW9B2I,EAA4B,CAC9BjC,WAAW,EACXF,kBAAmB,GACnBO,MAAO,GACPN,iBAAkB,GAsBhBmC,EAA2B,CAC7BlC,WAAW,EACXE,iBAAkB,GAClBG,MAAO,GACPF,gBAAiB,GAmBfgC,EAAoB,CACtBnD,MAAO,GAcLoD,EAAmB,CACrBhE,KAAM,YACNN,OAAQ,WACRK,WAAY,IC3EVkE,G,MAASC,0BACTC,EAAcC,YAAiB,CAAC3C,qBDcF,WAAiD,IAAhDhC,EAA+C,uDAAzCoE,EAA2BQ,EAAc,uDAAP,GACzE,OAAOA,EAAOxE,MACV,IJ5BmC,8BI6B/B,OAAOyE,OAAOC,OAAO,GAAI9E,EAAO,GAAI,CAACmC,WAAW,IAEpD,IJ9BmC,8BI+B/B,OAAO0C,OAAOC,OAAO,GAAI9E,EAAO,GAAI,CAACiC,kBAAmB2C,EAAOvE,QAAS8B,WAAW,EAAOD,iBAAkBiC,EAASS,EAAOvE,WAEhI,IJhCkC,6BIiC9B,OAAOwE,OAAOC,OAAO,GAAI9E,EAAO,GAAI,CAACwC,MAAOoC,EAAOvE,QAAS8B,WAAW,IAE3E,IJrBkB,aIsBd,OAAO0C,OAAOC,OAAO,GAAI9E,EAAO,GAAI,CAACiC,kBAAmB2C,EAAOvE,QAAS8B,WAAW,EAAOD,iBAAkBiC,EAASS,EAAOvE,WAEhI,QACI,OAAOL,IC7ByCoC,oBDwCzB,WAAgD,IAA/CpC,EAA8C,uDAAxCqE,EAA0BO,EAAc,uDAAP,GACvE,OAAOA,EAAOxE,MACV,IJjDkC,6BIkD9B,OAAOyE,OAAOC,OAAO,GAAI9E,EAAO,GAAI,CAACmC,WAAW,IAEpD,IJnDkC,6BIoD9B,OAAO0C,OAAOC,OAAO,GAAI9E,EAAO,GAAI,CAACqC,iBAAkBuC,EAAOvE,QAAS8B,WAAW,EAAQG,gBAAiB6B,EAASS,EAAOvE,WAE/H,IJrDiC,4BIsD7B,OAAOwE,OAAOC,OAAO,GAAI9E,EAAO,GAAI,CAACwC,MAAOoC,EAAOvE,QAAS8B,WAAW,IAE3E,QACI,OAAOnC,ICpD8D0C,aD4DrD,WAAyC,IAAxC1C,EAAuC,uDAAjCsE,EAAmBM,EAAc,uDAAP,GACzD,OAAOA,EAAOxE,MACV,IJhEkB,aIiEd,OAAOyE,OAAOC,OAAO,GAAI9E,EAAO,GAAI,CAACmB,MAAOyD,EAAOvE,UACvD,IJ/DiB,YIgEb,OAAOwE,OAAOC,OAAO,GAAI9E,EAAO,GAAI,CAACmB,MAAOyD,EAAOzD,QACnD,QACI,OAAOnB,ICnEwEE,YD6EpE,WAAwC,IAAvCF,EAAsC,uDAAhCuE,EAAkBK,EAAc,uDAAP,GACvD,OAAOA,EAAOxE,MACV,IJxE0B,qBI0E1B,IJzE2B,sBI2E3B,IJ1EqB,gBI4ErB,IJ3EuB,kBI6EvB,IJ5EsB,iBI6ElB,OAAOyE,OAAOC,OAAO,GAAI9E,EAAO,GAAI,CAACO,KAAMqE,EAAOvE,QAAQE,KAAMN,OAAQ2E,EAAOvE,QAAQJ,OAAQK,WAAYsE,EAAOvE,QAAQC,aAC9H,QACI,OAAON,MCzFb+E,EAAQC,YAAYN,EAAaO,YAAgBC,IAAiBV,IAExEW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUN,MAASA,GACjB,kBAAC,EAAD,QAGJO,SAASC,eAAe,SH6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzC,MAAK,SAAA0C,GACJA,EAAaC,gBAEdrC,OAAM,SAAAf,GACLqD,QAAQrD,MAAMA,EAAMsD,c","file":"static/js/main.2bc37b48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeheader.ddd5084d.png\";","module.exports = __webpack_public_path__ + \"static/media/poketeam.fc51dabc.png\";","export const getRandomIds = (number) => {\n    var numArray = [];\n    for (var i=0; i<number; i++) {\n      var num = Math.floor(Math.random() * 807) + 1;\n      numArray.push(num);\n    }\n    return numArray;\n  }","//Can change it to a Map method\n\nexport const createPokeURLs = (array) => {\n    const arrayURL = [];\n   \n    const addURL = (value) => {\n      var id = value;\n      var url = `https://pokeapi.co/api/v2/pokemon/${id}/`;\n      arrayURL.push(url);\n      return arrayURL;\n    }\n    array.forEach(addURL);\n    return arrayURL;\n  }","export const stealPoke = (arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy) => {\n    \n    let indexEnemy = -1;\n    let indexPlayer = -1;\n\n    let arrIndexPlayer = [];\n    let arrIndexEnemy = [];\n\n    for (let i = 0; i<arrayPlayer.length; i++) {\n        arrIndexPlayer.push(arrayPlayer[i].id)\n    }\n\n    for (let i = 0; i<arrayEnemy.length; i++) {\n        arrIndexEnemy.push(arrayEnemy[i].id)\n    }\n\n    if((arrIndexPlayer.indexOf(changeNumPlayer) === -1) || (arrIndexEnemy.indexOf(changeNumEnemy) === -1)) {\n        return arrayPlayer\n    } else {\n       \n            for (let i = 0; i<arrayEnemy.length; i++){\n                if(Number(arrayEnemy[i].id) === changeNumEnemy){\n                    indexEnemy = i;\n                    break\n                }\n            }\n        \n            for (let i = 0; i<arrayPlayer.length; i++){\n                if(arrayPlayer[i].id === changeNumPlayer){\n                    indexPlayer = i;\n                    break\n                } \n            }\n    \n        let arr = arrayEnemy[indexEnemy];\n        let arr1 = arrayPlayer;\n        //Works, but not sure how....\n        let arr2 = arr1.splice(indexPlayer, 1, arr);\n    \n        return arr1;\n    }\n}\n","import React from 'react';\nimport './Filler.css';\n\nconst Filler = (props) => {\n    const colormatch = (props) =>{\n      let color = ``;\n      let num = Number(props.percentage);\n      if (num > 90){\n        color = `green`\n        return color;\n      } else {\n        if (num > 80){\n          color = `yellow`\n          return color;\n        } else {\n          color = `red`\n          return color;\n        }\n      }\n    }\n\n    let colorFiller = colormatch(props);\n\n    return <div className={\"filler\" + \" \" + (colorFiller)} style={{ width: `${props.percentage}%` }} ><span>Energy:{props.percentage}%</span></div>\n  }\n\n  export default Filler;","import React from 'react';\nimport Filler from '../Filler/Filler';\nimport './ProgressBar.css';\n\nconst ProgressBar = (props) => {\n    return (\n        <div className=\"progress-bar\">\n            <Filler percentage={props.percentage}/>\n        </div>\n    )\n}\n\nexport default ProgressBar","import React from 'react';\nimport './Pokemon.css';\nimport ProgressBar from '../ProgressBar/ProgressBar';\n\nconst Pokemon = ({name, id, height, weight, energy}) => {\n\n    return(\n        <div className='dib br3 pa3 ma2 grow bw2 shadow-5 tc' id='card'>\n            <img id='poke' alt='pokemon' src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`}/>\n            <div>\n                <h3>{name.charAt(0).toUpperCase()+ name.slice(1)}</h3>\n                <h3>ID: {id}</h3>\n                <h3>Height: {height}</h3>\n                <h3>Weight: {weight}</h3>\n                <ProgressBar percentage={energy} />\n            </div>\n        </div>\n    )\n}\n\nexport default Pokemon;","import React from 'react';\nimport './PokeballLoader.css';\n\nconst Pokeball = () => {\n\n    return(\n        <div className=\"loader loader-pokeball is-active\"></div>\n    )\n}\n\nexport default Pokeball\n","import React, { Fragment } from 'react';\nimport Pokeball from '../PokeballLoader/PokeballLoader';\n\n\nconst PokeballArray = ({pokemonlist}) => {\n       return(\n           <Fragment>\n               {\n                   pokemonlist.map( (pokemon,i) => {\n                    return  <Pokeball key ={i} />\n                   }\n                   )\n               }\n           </Fragment>\n       )\n    }\nexport default PokeballArray;","import React, { Fragment } from 'react';\nimport Pokemon from '../Pokemon/Pokemon';\nimport PokeballArray from '../PokeballArray/PokeballArray';\n\nconst PokemonTeam = ({ pokemonlist, status }) => {\n\n\n    if (status){\n        return(\n            <Fragment>\n                <PokeballArray pokemonlist = {pokemonlist}/>\n            </Fragment>\n        )\n    } else {\n        return(\n            <Fragment>   \n                {\n                pokemonlist.map((pokemon, i) => {\n                    return(\n                     <Pokemon \n                        key={i} \n                        name={pokemonlist[i].name} \n                        id={pokemonlist[i].id} \n                        height={pokemonlist[i].height} \n                        weight={pokemonlist[i].weight}\n                        energy={pokemonlist[i].energy}\n                                                    />\n                    );\n                }\n            )\n        }\n    </Fragment>\n        );\n    }\n   \n}\nexport default PokemonTeam;\n","export const getStat = (stat, array) => {\n    let statistic = 0;\n        array.forEach((pokemon, i) => {\n            let pokeEnergy = array[i].energy / 100;\n            let statArray = array[i].stats;\n            statArray.forEach((statfield, i) => {\n                if (statArray[i].stat.name === stat) {\n                    statistic = statistic + (statArray[i].base_stat * pokeEnergy);\n                }\n            }\n            )\n         }\n        )\n    return statistic;\n  }","import React from 'react';\nimport './TeamStats.css';\nimport { getStat } from '../../containers/App/getStat.js';\n\nconst TeamStats = ({ pokemonlist }) => {\n    \n    const totalSpeed = getStat(`speed`, pokemonlist);\n    const totalSpecDef = getStat(`special-defense`, pokemonlist);\n    const totalSpecAttack = getStat(`special-attack`, pokemonlist);\n    const totalDefense = getStat(`defense`, pokemonlist);\n    const totalAttack = getStat(`attack`, pokemonlist);\n    const totalHp = getStat(`hp`, pokemonlist);\n\n    return(\n        <div className='dib br3 pa2 ma2' id='stat'>\n            <div>\n                <h2 id='headerstats'>Team Stats</h2>\n                <h3>Speed: { totalSpeed }</h3>\n                <h3>Special Defense: {totalSpecDef} </h3>\n                <h3>Special Attack: {totalSpecAttack}</h3>\n                <h3>Defense: {totalDefense}</h3>\n                <h3>Attack: {totalAttack}</h3>\n                <h3>HP: {totalHp}</h3>\n            </div>\n        </div>\n    );\n}\n\nexport default TeamStats;","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport { startGame } from '../../actions';\n\nimport './StartMenu.css';\n\n\n\nconst mapStateToProps = state => {\n    return {\n        screen: state.currentTurn.screen\n    }   \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        onStartGame: () => dispatch(startGame())\n    }\n}\n\nclass StartMenu extends Component {\n    \n    onStartGameClick = () => {\n        this.props.onStartGame();\n    }\n\n    render(){\n        return(\n            <Fragment>\n                <header className=\"App-header\">\n                    <h1>Pokébattle v1.0</h1>\n                 </header>\n                 <div id=\"pokeheader\">\n                        <img alt='pokemonheader' src={require(`./assets/pokeheader.png`)} />\n                 </div>\n                <div id='options'>\n                    <div id='option'>\n                        <button id='optionbutton' onClick={ this.onStartGameClick }>Play Pokébattle</button>\n                    </div>\n                    <div id='option'>\n                        <button id='optionbutton'>Instructions</button> \n                    </div>\n                </div>   \n                <div id=\"poketeam\">\n                    <img alt='pokemonteam' src={require(`./assets/poketeam.png`)} />\n                </div>\n            </Fragment>\n                )\n    }\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartMenu);\n","import {\n    REQUEST_PLAYER_POKE_PENDING,\n    REQUEST_PLAYER_POKE_SUCCESS,\n    REQUEST_PLAYER_POKE_FAILED,\n    REQUEST_ENEMY_POKE_PENDING,\n    REQUEST_ENEMY_POKE_SUCCESS,\n    REQUEST_ENEMY_POKE_FAILED,\n    SCORE_ZERO,\n    WIN_ROUND,\n    POKE_STEAL,\n    TURN_DATA_MAINMENU,\n    TURN_DATA_GAMESTART,\n    TURN_DATA_WIN,\n    TURN_DATA_STEAL,\n    TURN_DATA_LOSS\n\n} from './constants'\n\nimport { getRandomIds } from './containers/App/getRandomPokeIds';\nimport { createPokeURLs } from './containers/App/getPokeURLs';\nimport { stealPoke } from './containers/App/stealPoke';\n\n\nexport const requestPokemonPlayer = () => (dispatch) => {\n    dispatch({ type: REQUEST_PLAYER_POKE_PENDING });\n    const pokeIdsPlayer = getRandomIds(6);\n    const pokeURLsPlayer = createPokeURLs(pokeIdsPlayer);\n\n    setTimeout(() => {\n\n        Promise.all(pokeURLsPlayer.map(url => fetch(url)))\n        .then(resp=> Promise.all ( resp.map(r => r.json()) ))\n        .then(r => {let result = r.map(v => ({...v, energy: 100}))\n        return result})\n        .then(data => dispatch({ type: REQUEST_PLAYER_POKE_SUCCESS, payload: data}))\n        .catch(error => dispatch({ type: REQUEST_PLAYER_POKE_FAILED, payload: error }))\n\n    }, 3000)\n\n}\n\nexport const requestPokemonEnemy = () => (dispatch) => {\n    dispatch({ type: REQUEST_ENEMY_POKE_PENDING });\n    const pokeIdsEnemy = getRandomIds(6);\n    const pokeURLsPlayer = createPokeURLs(pokeIdsEnemy);\n\n    setTimeout(() => {\n\n        Promise.all(pokeURLsPlayer.map(url => fetch(url)))\n        .then(resp=> Promise.all ( resp.map(r => r.json()) ))\n        .then(r => {let result = r.map(v => ({...v, energy: 100}))\n        return result})\n        .then(data => dispatch({ type: REQUEST_ENEMY_POKE_SUCCESS, payload: data}))\n        .catch(error => dispatch({ type: REQUEST_ENEMY_POKE_FAILED, payload: error }))\n\n    }, 3000)\n}\n \n\nexport const currentScore = () => ({\n        type: SCORE_ZERO,\n        payload: 0\n})\n\nexport const winRound = score => ({\n    type: WIN_ROUND,\n    score\n})\n\nexport const stealPokemon = (arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy) => ({\n        type: POKE_STEAL,\n        payload: stealPoke(arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy)\n\n})\n\nexport const launchMenu = () => ({\n    type: TURN_DATA_MAINMENU,\n    payload: {\n        screen: 'mainmenu',\n        mainprompt: '',\n        turn: ''\n    }\n})\n\nexport const startGame = () => ({\n    type: TURN_DATA_GAMESTART,\n    payload: {\n        screen: 'game',\n        mainprompt: 'Click Battle To Fight!',\n        turn: 'battleready'\n    }\n})\n\nexport const roundWin = (array) => (dispatch) => {\n\n    const reducePower = (arrayPoke) => {\n        for (let i = 0; i < arrayPoke.length; i++){\n            let newEnergy = arrayPoke[i].energy - 5;\n            arrayPoke[i].energy = newEnergy;\n        }\n        return arrayPoke;\n    }\n    const lessPowerTeam = reducePower(array);\n\n    dispatch({ type: REQUEST_ENEMY_POKE_SUCCESS, payload: lessPowerTeam})\n    dispatch({type: TURN_DATA_WIN, payload: {screen: 'game', mainprompt: 'You Won! Pick a Pokémon to steal', turn: 'cansteal'}})\n}\n\nexport const pokeStolen = () => ({\n    type: TURN_DATA_STEAL,\n    payload: {\n        screen: 'game',\n        mainprompt: 'Nice Pokemon! Use it in Battle!',\n        turn: 'battleready'\n    }\n})\n\nexport const roundLoss = () => ({\n    type: TURN_DATA_LOSS,\n    payload: {\n        screen: 'game',\n        mainprompt: 'You Lost. Click Battle for Revenge!',\n        turn: 'battleready'\n    }\n})\n\n\n\n","//Get Player Pokemon\nexport const REQUEST_PLAYER_POKE_PENDING = 'REQUEST_PLAYER_POKE_PENDING';\nexport const REQUEST_PLAYER_POKE_SUCCESS = 'REQUEST_PLAYER_POKE_SUCCESS';\nexport const REQUEST_PLAYER_POKE_FAILED = 'REQUEST_PLAYER_POKE_FAILED';\n\n//Get Enemy Pokemon\nexport const REQUEST_ENEMY_POKE_PENDING = 'REQUEST_ENEMY_POKE_PENDING';\nexport const REQUEST_ENEMY_POKE_SUCCESS = 'REQUEST_ENEMY_POKE_SUCCESS';\nexport const REQUEST_ENEMY_POKE_FAILED = 'REQUEST_ENEMY_POKE_FAILED';\n\n//Get Initial Score\nexport const SCORE_ZERO = 'SCORE_ZERO';\n\n//Round Win\nexport const WIN_ROUND = 'WIN_ROUND';\n\n//Poke Steal\nexport const POKE_STEAL = 'POKE_STEAL';\n\n//Turn\nexport const TURN_DATA_MAINMENU = 'TURN_DATA_MAINMENU';\nexport const TURN_DATA_GAMESTART = 'TURN_DATA_GAMESTART';\nexport const TURN_DATA_WIN = 'TURN_DATA_WIN';\nexport const TURN_DATA_STEAL = 'TURN_DATA_STEAL';\nexport const TURN_DATA_LOSS = 'TURN_DATA_LOSS';","import React, { Component }  from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { requestPokemonPlayer, requestPokemonEnemy, currentScore, winRound, stealPokemon, startGame, roundWin, pokeStolen, roundLoss, launchMenu } from '../../actions'\nimport PokemonTeam from '../../components/PokemonTeam/PokemonTeam';\nimport TeamStats from '../../components/TeamStats/TeamStats';\nimport StartMenu from '../../components/StartMenu/StartMenu';\n\nconst mapStateToProps = state => {\n  return{\n    PlayerTeam: state.requestPokemonPlayer.pokemonlistPlayer,\n    TotalPlayerPower: state.requestPokemonPlayer.totalPlayerPower,\n    isPendingPlayer: state.requestPokemonPlayer.isPending,\n    EnemyTeam: state.requestPokemonEnemy.pokemonlistEnemy,\n    TotalEnemyPower: state.requestPokemonEnemy.totalEnemyPower,\n    isPendingEnemy: state.requestPokemonEnemy.isPending,\n    errorPlayer: state.requestPokemonPlayer.error,\n    errorEnemy: state.requestPokemonEnemy.error,\n    score: state.currentScore.score,\n    turn: state.currentTurn.turn,\n    screen: state.currentTurn.screen,\n    mainprompt: state.currentTurn.mainprompt\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRequestPokemonPlayer: () => dispatch(requestPokemonPlayer()),\n    onRequestPokemonEnemy: () => dispatch(requestPokemonEnemy()),\n    onCurrentScore: () => dispatch(currentScore()),\n    onWinRound: (score) => dispatch(winRound(score)),\n    onStealPokemon: (arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy) => dispatch(stealPokemon(arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy)),\n    onStartGame: () => dispatch(startGame()),\n    onRoundWin: (array) => dispatch(roundWin(array)),\n    onPokeStolen: () => dispatch(pokeStolen()),\n    onRoundLoss: () => dispatch(roundLoss()),\n    onLaunchMenu: () => dispatch(launchMenu()),\n  }\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    //StartGame\n    this.props.onLaunchMenu();\n    //Get Player Pokemon Team    \n    this.props.onRequestPokemonPlayer();\n    //Get Enemy Pokemon Team\n    this.props.onRequestPokemonEnemy();\n    //Reset Score\n    this.props.onCurrentScore();\n  }\n\n  onMainMenuButtonClick = () => {\n  \n    this.props.onRequestPokemonPlayer();\n    this.props.onCurrentScore();\n    this.props.onRoundLoss();\n    this.props.onRequestPokemonEnemy();\n    this.props.onLaunchMenu();\n\n  }\n\n  onRefreshButtonClick = () => {\n    //Refresh Player Pokemon Team  \n    this.props.onRequestPokemonPlayer();\n    //Reset The Score\n    this.props.onCurrentScore();\n    //Reset Game Status\n    this.props.onStartGame();\n  }\n\n  onBattleButtonClick = () => {\n    const { PlayerTeam, EnemyTeam, score, TotalPlayerPower, TotalEnemyPower }  = this.props;\n\n    // Win Condition\n    if (TotalPlayerPower >= TotalEnemyPower){\n        //lets player steal a pokemon\n            this.props.onRoundWin(PlayerTeam);\n            let pokeSteal = window.prompt(`Type Pokemon ID to steal!`);\n            pokeSteal = Number(pokeSteal);\n            let pokeDiscard = window.prompt(`Type Pokemon ID to discard!`);\n            pokeDiscard = Number (pokeDiscard);\n           if (pokeSteal && pokeDiscard){\n             //Steal Pokemon\n              this.props.onStealPokemon(PlayerTeam, pokeDiscard, EnemyTeam, pokeSteal);\n              this.props.onPokeStolen();\n           }\n       this.props.onWinRound(score+1);\n    } \n    // Loss Condition\n    else {\n      this.props.onRequestPokemonPlayer();\n      this.props.onCurrentScore();\n      this.props.onRoundLoss();\n    }\n    // refresh enemy team\n    this.props.onRequestPokemonEnemy();\n  }\n\n\n  render() {\n    const { PlayerTeam, isPendingPlayer, EnemyTeam, isPendingEnemy, score, mainprompt, screen }  = this.props;\n    // if (isPendingPlayer && isPendingEnemy ) {\n    //   return <h4>Loading</h4>\n    // } else {\n      if (screen === 'mainmenu') {\n        return <StartMenu />\n      } else{\n        return(\n          <div className=\"App\">\n          <header className=\"App-header\">\n              <h1>Pokébattle v1.0</h1>\n              <h1 className='push'>{mainprompt}</h1>\n              <button id='controlbuttons' onClick={ this.onRefreshButtonClick } className='pushsmall'>Get New Pokémon</button>\n              <button id='controlbuttons' onClick={ this.onBattleButtonClick } className='pushsmall'>Battle</button>\n              <button id='controlbuttons' onClick={ this.onMainMenuButtonClick } className='pushsmall'>Main Menu</button>\n              <h2 className='pushsmall score'>Current Score: {score}</h2>\n          </header>\n          <div className=\"game\">\n              <h2>Your Team</h2>\n              <div className=\"gamerow\">\n                <PokemonTeam id='Player' pokemonlist={PlayerTeam} status={isPendingPlayer} />\n                <TeamStats pokemonlist={PlayerTeam}/>\n              </div>\n              <h2>Red's Team</h2>\n              <div className=\"gamerow\">\n                <PokemonTeam id='Enemy' pokemonlist={EnemyTeam} status={isPendingEnemy}/>\n                <TeamStats pokemonlist={EnemyTeam}/>\n              </div>\n          </div>\n        </div>\n          );\n        }\n      }  \n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { getStat } from './getStat';\n\nexport const getPower = (array) => {\n\n    const totalSpeed = getStat(`speed`, array);\n      const totalSpecDef = getStat(`special-defense`, array);\n      const totalSpecAttack = getStat(`special-attack`, array);\n      const totalDefense = getStat(`defense`, array);\n      const totalAttack = getStat(`attack`, array);\n      const totalHp = getStat(`hp`, array);\n\n      const totalPower = (totalSpeed + totalSpecDef + totalSpecAttack + totalDefense + totalAttack + totalHp);\n      return totalPower;\n    \n}","import {\n    REQUEST_PLAYER_POKE_PENDING,\n    REQUEST_PLAYER_POKE_SUCCESS,\n    REQUEST_PLAYER_POKE_FAILED,\n    REQUEST_ENEMY_POKE_PENDING,\n    REQUEST_ENEMY_POKE_SUCCESS,\n    REQUEST_ENEMY_POKE_FAILED,\n    SCORE_ZERO,\n    WIN_ROUND,\n    POKE_STEAL,\n    TURN_DATA_MAINMENU,\n    TURN_DATA_GAMESTART,\n    TURN_DATA_WIN,\n    TURN_DATA_STEAL,\n    TURN_DATA_LOSS\n\n} from './constants'\n\nimport { getPower } from './containers/App/getPower';\n\nconst initialStatePlayerPokemon = {\n    isPending: false,\n    pokemonlistPlayer: [],\n    error: '',\n    totalPlayerPower: 0\n}\n\nexport const requestPokemonPlayer = (state=initialStatePlayerPokemon, action={}) => {\n    switch(action.type){\n        case REQUEST_PLAYER_POKE_PENDING:\n            return Object.assign({}, state, {}, {isPending: true})\n\n        case REQUEST_PLAYER_POKE_SUCCESS:\n            return Object.assign({}, state, {}, {pokemonlistPlayer: action.payload, isPending: false, totalPlayerPower: getPower(action.payload)})\n\n        case REQUEST_PLAYER_POKE_FAILED:\n            return Object.assign({}, state, {}, {error: action.payload, isPending: false})\n        \n        case POKE_STEAL:\n            return Object.assign({}, state, {}, {pokemonlistPlayer: action.payload, isPending: false, totalPlayerPower: getPower(action.payload)})\n\n        default:\n            return state;\n    }\n}\n\nconst initialStateEnemyPokemon = {\n    isPending: false,\n    pokemonlistEnemy: [],\n    error: '',\n    totalEnemyPower: 0\n}\n\nexport const requestPokemonEnemy = (state=initialStateEnemyPokemon, action={}) => {\n    switch(action.type){\n        case REQUEST_ENEMY_POKE_PENDING:\n            return Object.assign({}, state, {}, {isPending: true})\n\n        case REQUEST_ENEMY_POKE_SUCCESS:\n            return Object.assign({}, state, {}, {pokemonlistEnemy: action.payload, isPending: false,  totalEnemyPower: getPower(action.payload)})\n        \n        case REQUEST_ENEMY_POKE_FAILED:\n            return Object.assign({}, state, {}, {error: action.payload, isPending: false})\n        \n        default:\n            return state;\n    }\n}\n\nconst initialStateScore = {\n    score: 0\n}\n\nexport const currentScore = (state=initialStateScore, action={}) => {\n    switch(action.type){\n        case SCORE_ZERO:\n            return Object.assign({}, state, {}, {score: action.payload})\n        case WIN_ROUND:\n            return Object.assign({}, state, {}, {score: action.score})\n            default:\n                return state;\n    }\n}\n\nconst initialStateTurn = {\n    turn: 'gamestart',\n    screen: 'mainmenu',\n    mainprompt: ''\n}\n\nexport const currentTurn = (state=initialStateTurn, action={}) => {\n    switch(action.type){\n        case TURN_DATA_MAINMENU:\n            return Object.assign({}, state, {}, {turn: action.payload.turn, screen: action.payload.screen, mainprompt: action.payload.mainprompt})\n        case TURN_DATA_GAMESTART:\n            return Object.assign({}, state, {}, {turn: action.payload.turn, screen: action.payload.screen, mainprompt: action.payload.mainprompt})\n        case TURN_DATA_WIN:\n            return Object.assign({}, state, {}, {turn: action.payload.turn, screen: action.payload.screen, mainprompt: action.payload.mainprompt})\n        case TURN_DATA_STEAL:\n            return Object.assign({}, state, {}, {turn: action.payload.turn, screen: action.payload.screen, mainprompt: action.payload.mainprompt})\n        case TURN_DATA_LOSS:\n            return Object.assign({}, state, {}, {turn: action.payload.turn, screen: action.payload.screen, mainprompt: action.payload.mainprompt})   \n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createLogger } from 'redux-logger'\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { requestPokemonPlayer, requestPokemonEnemy, currentScore, currentTurn } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers( {requestPokemonPlayer, requestPokemonEnemy, currentScore, currentTurn} );\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}