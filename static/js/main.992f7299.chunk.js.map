{"version":3,"sources":["components/StartMenu/assets/pokeheader.png","components/StartMenu/assets/poketeam.png","containers/App/getRandomPokeIds.js","containers/App/getPokeURLs.js","containers/App/stealPoke.js","actions.js","constants.js","components/Filler/Filler.js","components/ProgressBar/ProgressBar.js","components/Pokemon/Pokemon.js","components/PokeballLoader/PokeballLoader.js","components/PokeballArray/PokeballArray.js","components/PokemonTeam/PokemonTeam.js","containers/App/getStat.js","components/TeamStats/TeamStats.js","components/PokePickList/PokePickList.js","components/PokemonSteal/PokemonSteal.js","components/Controls/Controls.js","components/StartMenu/StartMenu.js","components/Instructions/Instructions.js","containers/App/App.js","serviceWorker.js","containers/App/getPower.js","reducers.js","index.js"],"names":["module","exports","getRandomIds","number","numArray","i","num","Math","floor","random","push","createPokeURLs","array","arrayURL","forEach","value","url","stealPoke","arrayPlayer","changeNumPlayer","arrayEnemy","changeNumEnemy","indexEnemy","indexPlayer","arrIndexPlayer","arrIndexEnemy","length","id","indexOf","Number","console","log","arr","arr1","splice","requestPokemonPlayer","dispatch","type","pokeIdsPlayer","pokeURLsPlayer","setTimeout","Promise","all","map","fetch","then","resp","r","json","v","energy","data","payload","catch","error","requestPokemonEnemy","pokeIdsEnemy","winRound","score","controls","stealPokemon","roundWin","arrayPoke","newEnergy","reducePower","screen","mainprompt","turn","Filler","props","colorFiller","percentage","colormatch","className","style","width","ProgressBar","Pokemon","name","height","weight","alt","src","charAt","toUpperCase","slice","Pokeball","PokeballArray","pokemonlist","pokemon","key","PokemonTeam","status","getStat","stat","statistic","pokeEnergy","statArray","stats","statfield","round","base_stat","TeamStats","totalSpeed","totalSpecDef","totalSpecAttack","totalDefense","totalAttack","totalHp","PokePickList","onDiscardPlayer","event","onStealPokemonById","target","onStealEnemy","onDiscardPokemonById","onChange","this","pokemonlistPlayer","pokemonlistEnemy","Component","connect","state","discardPoke","pokeDiscard","pokeId","pokeSteal","stealPokemonById","discardPokemonById","PokemonSteal","onStealPokemonButtonClick","PlayerTeam","EnemyTeam","onStealPokemon","onPokeStolen","onRequestPokemonEnemy","onWinRound","onClick","currentScore","controlBox","onRoundWin","onCurrentScore","Controls","onMainMenuButtonClick","onRequestPokemonPlayer","onRoundLoss","onLaunchMenu","onTeamStatsClick","onViewTeamStats","onBackClick","onViewControlButtons","onRefreshButtonClick","onStartGame","onBattleButtonClick","TotalPlayerPower","TotalEnemyPower","currentTurn","totalPlayerPower","isPendingPlayer","isPending","totalEnemyPower","isPendingEnemy","errorPlayer","errorEnemy","StartMenu","onStartGameClick","onSeeInstructionsClick","onSeeInstructions","require","Instructions","App","Boolean","window","location","hostname","match","getPower","initialStatePlayerPokemon","initialStateEnemyPokemon","initialStateScore","initialStateTurn","initialStateControlBox","initialStatePokeDiscard","initialStatePokeSteal","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.992f7299.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeheader.ddd5084d.png\";","module.exports = __webpack_public_path__ + \"static/media/poketeam.fc51dabc.png\";","export const getRandomIds = (number) => {\n    var numArray = [];\n    for (var i=0; i<number; i++) {\n      var num = Math.floor(Math.random() * 807) + 1;\n      numArray.push(num);\n    }\n    return numArray;\n  }","//Can change it to a Map method\n\nexport const createPokeURLs = (array) => {\n    const arrayURL = [];\n   \n    const addURL = (value) => {\n      var id = value;\n      var url = `https://pokeapi.co/api/v2/pokemon/${id}/`;\n      arrayURL.push(url);\n      return arrayURL;\n    }\n    array.forEach(addURL);\n    return arrayURL;\n  }","export const stealPoke = (arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy) => {\n    \n\n    let indexEnemy = -1;\n    let indexPlayer = -1;\n\n    let arrIndexPlayer = [];\n    let arrIndexEnemy = [];\n\n    for (let i = 0; i<arrayPlayer.length; i++) {\n        arrIndexPlayer.push(arrayPlayer[i].id)\n    }\n\n    for (let i = 0; i<arrayEnemy.length; i++) {\n        arrIndexEnemy.push(arrayEnemy[i].id)\n    }\n\n\n\n    if((arrIndexPlayer.indexOf(Number(changeNumPlayer)) === -1) || (arrIndexEnemy.indexOf(Number(changeNumEnemy)) === -1)) {\n        return arrayPlayer\n    } else {\n       \n            for (let i = 0; i<arrayEnemy.length; i++){\n                if(Number(arrayEnemy[i].id) === Number(changeNumEnemy)){\n                    indexEnemy = i;\n                    console.log(indexEnemy)\n                    break\n                }\n            }\n        \n            for (let i = 0; i<arrayPlayer.length; i++){\n                if(arrayPlayer[i].id === Number(changeNumPlayer)){\n                    indexPlayer = i;\n                    console.log(indexPlayer)\n                    break\n                } \n            }\n    \n        let arr = arrayEnemy[indexEnemy];\n        let arr1 = arrayPlayer;\n        //Works, but not sure how....\n        let arr2 = arr1.splice(indexPlayer, 1, arr);\n\n        return arr1;\n    }\n}\n","import {\n    REQUEST_PLAYER_POKE_PENDING,\n    REQUEST_PLAYER_POKE_SUCCESS,\n    REQUEST_PLAYER_POKE_FAILED,\n    REQUEST_ENEMY_POKE_PENDING,\n    REQUEST_ENEMY_POKE_SUCCESS,\n    REQUEST_ENEMY_POKE_FAILED,\n    SCORE_ZERO,\n    WIN_ROUND,\n    POKE_STEAL,\n    TURN_DATA_MAINMENU,\n    TURN_DATA_GAMESTART,\n    TURN_DATA_WIN,\n    TURN_DATA_STEAL,\n    TURN_DATA_LOSS,\n    VIEW_TEAM_STATS,\n    VIEW_CONTROLS_MAIN,\n    POKE_STEAL_STEAL_POKE,\n    POKE_STEAL_DISCARD_POKE,\n    SEE_INSTRUCTIONS\n\n} from './constants'\n\nimport { getRandomIds } from './containers/App/getRandomPokeIds';\nimport { createPokeURLs } from './containers/App/getPokeURLs';\nimport { stealPoke } from './containers/App/stealPoke';\n\n\nexport const requestPokemonPlayer = () => (dispatch) => {\n    dispatch({ type: REQUEST_PLAYER_POKE_PENDING });\n    const pokeIdsPlayer = getRandomIds(6);\n    const pokeURLsPlayer = createPokeURLs(pokeIdsPlayer);\n\n    setTimeout(() => {\n\n        Promise.all(pokeURLsPlayer.map(url => fetch(url)))\n        .then(resp=> Promise.all ( resp.map(r => r.json()) ))\n        .then(r => {let result = r.map(v => ({...v, energy: 100}))\n        return result})\n        .then(data => dispatch({ type: REQUEST_PLAYER_POKE_SUCCESS, payload: data}))\n        .catch(error => dispatch({ type: REQUEST_PLAYER_POKE_FAILED, payload: error }))\n\n    }, 3000)\n\n}\n\nexport const requestPokemonEnemy = () => (dispatch) => {\n    dispatch({ type: REQUEST_ENEMY_POKE_PENDING });\n    const pokeIdsEnemy = getRandomIds(6);\n    const pokeURLsPlayer = createPokeURLs(pokeIdsEnemy);\n\n    setTimeout(() => {\n\n        Promise.all(pokeURLsPlayer.map(url => fetch(url)))\n        .then(resp=> Promise.all ( resp.map(r => r.json()) ))\n        .then(r => {let result = r.map(v => ({...v, energy: 100}))\n        return result})\n        .then(data => dispatch({ type: REQUEST_ENEMY_POKE_SUCCESS, payload: data}))\n        .catch(error => dispatch({ type: REQUEST_ENEMY_POKE_FAILED, payload: error }))\n\n    }, 3000)\n}\n \n\nexport const currentScore = () => ({\n        type: SCORE_ZERO,\n        payload: 0\n})\n\nexport const winRound = score => (dispatch) => {\n   dispatch({ type: WIN_ROUND, payload:{controls: 'control-buttons'},score });\n}\n\nexport const stealPokemon = (arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy) => ({\n        type: POKE_STEAL,\n        payload: stealPoke(arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy)\n\n})\n\nexport const launchMenu = () => ({\n    type: TURN_DATA_MAINMENU,\n    payload: {\n        screen: 'mainmenu',\n        mainprompt: '',\n        turn: ''\n    }\n})\n\nexport const startGame = () => ({\n    type: TURN_DATA_GAMESTART,\n    payload: {\n        screen: 'game',\n        mainprompt: 'Click Battle To Fight!',\n        turn: 'battleready',\n        controls: 'control-buttons'\n    }\n})\n\nexport const seeIntructions = () => ({\n    type: SEE_INSTRUCTIONS,\n    payload: {\n        screen: 'instructions'\n    }\n\n})\n\nexport const roundWin = (array) => (dispatch) => {\n\n    const reducePower = (arrayPoke) => {\n        for (let i = 0; i < arrayPoke.length; i++){\n            let newEnergy = arrayPoke[i].energy - 5;\n            arrayPoke[i].energy = newEnergy;\n        }\n        return arrayPoke;\n    }\n    const lessPowerTeam = reducePower(array);\n\n    dispatch({ type: REQUEST_PLAYER_POKE_SUCCESS, payload: lessPowerTeam})\n    dispatch({type: TURN_DATA_WIN, payload: {screen: 'game', mainprompt: 'You Won! Pick a Pokémon to steal', turn: 'cansteal', controls: 'pokemon-steal'}})\n}\n\nexport const pokeStolen = () => ({\n    type: TURN_DATA_STEAL,\n    payload: {\n        screen: 'game',\n        mainprompt: 'Nice Pokemon! Use it in Battle!',\n        turn: 'battleready',\n        controls: 'control-buttons'\n    }\n})\n\nexport const roundLoss = () => ({\n    type: TURN_DATA_LOSS,\n    payload: {\n        screen: 'loss-screen',\n        mainprompt: 'You Lost. Click Battle for Revenge!',\n        turn: 'battleready',\n        controls: 'control-buttons'\n    }\n})\n\nexport const viewTeamStats = () => ({\n    type: VIEW_TEAM_STATS,\n    payload: {\n        controls: 'team-stats'\n    }\n})\n\nexport const viewControlButtons = () => ({\n    type: VIEW_CONTROLS_MAIN,\n    payload: {\n        controls: 'control-buttons'\n    }\n})\n\nexport const discardPokemonById = (value) => ({\n    type: POKE_STEAL_DISCARD_POKE,\n    payload: {\n        pokeId: value\n    }\n})\n\nexport const stealPokemonById = (value) => ({\n    type: POKE_STEAL_STEAL_POKE,\n    payload: {\n        pokeId: value\n    }\n})\n\n\n","//Get Player Pokemon\nexport const REQUEST_PLAYER_POKE_PENDING = 'REQUEST_PLAYER_POKE_PENDING';\nexport const REQUEST_PLAYER_POKE_SUCCESS = 'REQUEST_PLAYER_POKE_SUCCESS';\nexport const REQUEST_PLAYER_POKE_FAILED = 'REQUEST_PLAYER_POKE_FAILED';\n\n//Get Enemy Pokemon\nexport const REQUEST_ENEMY_POKE_PENDING = 'REQUEST_ENEMY_POKE_PENDING';\nexport const REQUEST_ENEMY_POKE_SUCCESS = 'REQUEST_ENEMY_POKE_SUCCESS';\nexport const REQUEST_ENEMY_POKE_FAILED = 'REQUEST_ENEMY_POKE_FAILED';\n\n//Get Initial Score\nexport const SCORE_ZERO = 'SCORE_ZERO';\n\n//Go To Instructions\n export const SEE_INSTRUCTIONS = 'SEE_INSTRUCTIONS'; \n\n//Round Win\nexport const WIN_ROUND = 'WIN_ROUND';\n\n//Poke Steal\nexport const POKE_STEAL = 'POKE_STEAL';\nexport const POKE_STEAL_DISCARD_POKE = 'POKE_STEAL_DISCARD_POKE';\nexport const POKE_STEAL_STEAL_POKE = 'POKE_STEAL_STEAL_POKE'\n\n//Turn\nexport const TURN_DATA_MAINMENU = 'TURN_DATA_MAINMENU';\nexport const TURN_DATA_GAMESTART = 'TURN_DATA_GAMESTART';\nexport const TURN_DATA_WIN = 'TURN_DATA_WIN';\nexport const TURN_DATA_STEAL = 'TURN_DATA_STEAL';\nexport const TURN_DATA_LOSS = 'TURN_DATA_LOSS';\n\n//Controls for the control box\nexport const VIEW_TEAM_STATS = 'VIEW_TEAM_STATS';\nexport const VIEW_CONTROLS_MAIN = 'VIEW_CONTROLS_MAIN';","import React from 'react';\nimport './Filler.css';\n\nconst Filler = (props) => {\n    const colormatch = (props) =>{\n      let color = ``;\n      let num = Number(props.percentage);\n      if (num > 90){\n        color = `green`\n        return color;\n      } else {\n        if (num > 80){\n          color = `yellow`\n          return color;\n        } else {\n          color = `red`\n          return color;\n        }\n      }\n    }\n\n    let colorFiller = colormatch(props);\n\n    return <div className={\"filler\" + \" \" + (colorFiller)} style={{ width: `${props.percentage}%` }} ><span>Energy:{props.percentage}%</span></div>\n  }\n\n  export default Filler;","import React from 'react';\nimport Filler from '../Filler/Filler';\nimport './ProgressBar.css';\n\nconst ProgressBar = (props) => {\n    return (\n        <div className=\"progress-bar\">\n            <Filler percentage={props.percentage}/>\n        </div>\n    )\n}\n\nexport default ProgressBar","import React from 'react';\nimport './Pokemon.css';\nimport ProgressBar from '../ProgressBar/ProgressBar';\n\nconst Pokemon = ({name, id, height, weight, energy}) => {\n\n    return(\n        <div className='dib br3 pa3 ma2 grow bw2 shadow-5 tc' id='card'>\n            <img id='poke' alt='pokemon' src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`}/>\n            <div>\n                <h3>{name.charAt(0).toUpperCase()+ name.slice(1)}</h3>\n                <h3>ID: {id}</h3>\n                <h3>Height: {height}</h3>\n                <h3>Weight: {weight}</h3>\n                <ProgressBar percentage={energy} />\n            </div>\n        </div>\n    )\n}\n\nexport default Pokemon;","import React from 'react';\nimport './PokeballLoader.css';\n\nconst Pokeball = () => {\n\n    return(\n        <div className=\"loader loader-pokeball is-active\"></div>\n    )\n}\n\nexport default Pokeball\n","import React, { Fragment } from 'react';\nimport Pokeball from '../PokeballLoader/PokeballLoader';\n\n\nconst PokeballArray = ({pokemonlist}) => {\n       return(\n           <Fragment>\n               {\n                   pokemonlist.map( (pokemon,i) => {\n                    return  <Pokeball key ={i} />\n                   }\n                   )\n               }\n           </Fragment>\n       )\n    }\nexport default PokeballArray;","import React, { Fragment } from 'react';\nimport Pokemon from '../Pokemon/Pokemon';\nimport PokeballArray from '../PokeballArray/PokeballArray';\n\nconst PokemonTeam = ({ pokemonlist, status }) => {\n\n\n    if (status){\n        return(\n            <Fragment>\n                <PokeballArray pokemonlist = {pokemonlist}/>\n            </Fragment>\n        )\n    } else {\n        return(\n            <Fragment>   \n                {\n                pokemonlist.map((pokemon, i) => {\n                    return(\n                     <Pokemon \n                        key={i} \n                        name={pokemonlist[i].name} \n                        id={pokemonlist[i].id} \n                        height={pokemonlist[i].height} \n                        weight={pokemonlist[i].weight}\n                        energy={pokemonlist[i].energy}\n                                                    />\n                    );\n                }\n            )\n        }\n    </Fragment>\n        );\n    }\n   \n}\nexport default PokemonTeam;\n","export const getStat = (stat, array) => {\n    let statistic = 0;\n        array.forEach((pokemon, i) => {\n            let pokeEnergy = array[i].energy / 100;\n            let statArray = array[i].stats;\n            statArray.forEach((statfield, i) => {\n                if (statArray[i].stat.name === stat) {\n                    statistic = Math.round(statistic + (statArray[i].base_stat * pokeEnergy));\n                }\n            }\n            )\n         }\n        )\n    return statistic;\n  }","import React from 'react';\nimport './TeamStats.css';\nimport { getStat } from '../../containers/App/getStat.js';\n\nconst TeamStats = ({ pokemonlist }) => {\n    \n    const totalSpeed = getStat(`speed`, pokemonlist);\n    const totalSpecDef = getStat(`special-defense`, pokemonlist);\n    const totalSpecAttack = getStat(`special-attack`, pokemonlist);\n    const totalDefense = getStat(`defense`, pokemonlist);\n    const totalAttack = getStat(`attack`, pokemonlist);\n    const totalHp = getStat(`hp`, pokemonlist);\n\n    return(\n            <div>\n                <div>\n                    <h2 id='headerstats'>Team Stats</h2>\n                </div>\n                <div>\n                    <h3>Speed: { totalSpeed }   HP: {totalHp} </h3>\n                    <h3>Special Defense: {totalSpecDef}   Special Attack: {totalSpecAttack}</h3>\n                    <h3>Attack: {totalAttack}   Defense: {totalDefense}</h3>\n                </div>\n            </div>\n    );\n}\n\nexport default TeamStats;","import React, { Component } from 'react';\nimport { stealPokemonById, discardPokemonById } from '../../actions'\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n        discardPoke: state.pokeDiscard.pokeId,\n        stealPoke: state.pokeSteal.pokeId\n    }   \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        onStealPokemonById: (value) => dispatch(stealPokemonById(value)),\n        onDiscardPokemonById: (value) => dispatch(discardPokemonById(value))\n    }\n}\n\n\nclass PokePickList extends Component {\n\n    onDiscardPlayer = (event) => {\n        this.props.onStealPokemonById(event.target.value);\n    }\n    \n    onStealEnemy = (event) => {\n        this.props.onDiscardPokemonById(event.target.value);\n    }\n\n    render(){\n        return(\n            <div>\n                <div>\n                    <h3>Discard a Pokémon</h3>\n                    <select onChange={this.onStealEnemy}>\n                    <option>Select one Pokémon</option>\n                        {\n                            this.props.pokemonlistPlayer.map(function (pokemon, i) {\n                                return <option\n                                    key={pokemon.id}\n                                    value={pokemon.id}>\n                                    {pokemon.name}\n                                </option>\n                            })\n                        }\n                    </select>\n                </div>\n                <div>\n                    <h3>Pick Pokémon to Steal</h3>\n                    <select onChange={this.onDiscardPlayer}>\n                        <option>Select one Pokémon</option>\n                        {\n                            this.props.pokemonlistEnemy.map(function (pokemon, i) {\n                                return <option\n                                    key={pokemon.id}\n                                    value={pokemon.id}>\n                                    {pokemon.name}\n                                </option>\n                            })\n                        }\n                    </select>\n                </div>\n            </div>\n    );\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokePickList);","import React, { Component } from 'react';\nimport PokePickList from '../PokePickList/PokePickList';\nimport { currentScore, stealPokemon, roundWin, pokeStolen, winRound, requestPokemonEnemy } from '../../actions'\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n        PlayerTeam: state.requestPokemonPlayer.pokemonlistPlayer,\n        EnemyTeam: state.requestPokemonEnemy.pokemonlistEnemy,\n        score: state.currentScore.score,\n        controls: state.controlBox.controls,\n        pokeDiscard: state.pokeDiscard.pokeId,\n        pokeSteal: state.pokeSteal.pokeId,\n\n    }   \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        onRoundWin: (array) => dispatch(roundWin(array)),\n        onStealPokemon: (arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy) => dispatch(stealPokemon(arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy)),\n        onPokeStolen: () => dispatch(pokeStolen()),\n        onCurrentScore: () => dispatch(currentScore()),\n        onWinRound: (score) => dispatch(winRound(score)),\n        onRequestPokemonEnemy: () => dispatch(requestPokemonEnemy())\n    }\n}\n\nclass PokemonSteal extends Component {\n\n    onStealPokemonButtonClick = () => {\n        const { PlayerTeam, EnemyTeam, score, pokeDiscard, pokeSteal }  = this.props;\n\n                 //Steal Pokemon\n                this.props.onStealPokemon(PlayerTeam, pokeDiscard, EnemyTeam, pokeSteal);\n                this.props.onPokeStolen();\n                this.props.onRequestPokemonEnemy();\n                this.props.onWinRound(score+1);\n    }\n\nrender(){\n    const { PlayerTeam, EnemyTeam }  = this.props;\n\n    return( \n        <div>\n            <div>\n                <PokePickList pokemonlistEnemy={EnemyTeam} pokemonlistPlayer={PlayerTeam}/>\n            </div>\n            <div>\n                <button onClick={ this.onStealPokemonButtonClick }>Steal Pokémon</button>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonSteal);","import React, { Component } from 'react';\nimport './Controls.css';\nimport { requestPokemonPlayer, requestPokemonEnemy, currentScore, winRound, stealPokemon, startGame, roundWin, pokeStolen, roundLoss, launchMenu, viewTeamStats, viewControlButtons } from '../../actions'\nimport TeamStats from '../../components/TeamStats/TeamStats';\nimport PokemonSteal from '../../components/PokemonSteal/PokemonSteal';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n        mainprompt: state.currentTurn.mainprompt,\n        turn: state.currentTurn.turn,\n        screen: state.currentTurn.screen,\n        PlayerTeam: state.requestPokemonPlayer.pokemonlistPlayer,\n        TotalPlayerPower: state.requestPokemonPlayer.totalPlayerPower,\n        isPendingPlayer: state.requestPokemonPlayer.isPending,\n        EnemyTeam: state.requestPokemonEnemy.pokemonlistEnemy,\n        TotalEnemyPower: state.requestPokemonEnemy.totalEnemyPower,\n        isPendingEnemy: state.requestPokemonEnemy.isPending,\n        errorPlayer: state.requestPokemonPlayer.error,\n        errorEnemy: state.requestPokemonEnemy.error,\n        score: state.currentScore.score,\n        controls: state.controlBox.controls\n    }   \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n    onRequestPokemonPlayer: () => dispatch(requestPokemonPlayer()),\n    onRequestPokemonEnemy: () => dispatch(requestPokemonEnemy()),\n    onCurrentScore: () => dispatch(currentScore()),\n    onWinRound: (score) => dispatch(winRound(score)),\n    onStealPokemon: (arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy) => dispatch(stealPokemon(arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy)),\n    onStartGame: () => dispatch(startGame()),\n    onRoundWin: (array) => dispatch(roundWin(array)),\n    onPokeStolen: () => dispatch(pokeStolen()),\n    onRoundLoss: () => dispatch(roundLoss()),\n    onLaunchMenu: () => dispatch(launchMenu()),\n    onViewTeamStats: () => dispatch(viewTeamStats()),\n    onViewControlButtons: () => dispatch(viewControlButtons())\n    }\n}\n\n\nclass Controls extends Component {\n\n\n    onMainMenuButtonClick = () => {\n  \n        this.props.onRequestPokemonPlayer();\n        this.props.onCurrentScore();\n        this.props.onRoundLoss();\n        this.props.onRequestPokemonEnemy();\n        this.props.onLaunchMenu();\n    \n      }\n\n      onTeamStatsClick = () => {\n        this.props.onViewTeamStats();\n      }\n\n      onBackClick = () => {\n        this.props.onViewControlButtons();\n      }\n    \n      onRefreshButtonClick = () => {\n        //Refresh Player Pokemon Team  \n        this.props.onRequestPokemonPlayer();\n        //Reset The Score\n        this.props.onCurrentScore();\n        //Reset Game Status\n        this.props.onStartGame();\n      }\n    \n      onBattleButtonClick = () => {\n        const { PlayerTeam, TotalPlayerPower, TotalEnemyPower }  = this.props;\n    \n        // Win Condition\n        if (TotalPlayerPower >= TotalEnemyPower){\n            //lets player steal a pokemon\n                this.props.onRoundWin(PlayerTeam);\n        } \n        // Loss Condition\n        else {\n          this.props.onRequestPokemonPlayer();\n          this.props.onCurrentScore();\n          this.props.onRoundLoss();\n          this.props.onRequestPokemonEnemy();\n        }\n      }\n\n\n    render(){\n        const { mainprompt, controls, PlayerTeam }  = this.props;\n        if (controls === 'pokemon-steal'){\n            return(\n                <div className='controlbox'>\n                    <PokemonSteal />\n                </div>\n            ) \n        }\n        else if(controls === 'team-stats'){\n            return(\n            <div className='controlbox'>\n                <div>\n                    <div className='controls'>\n                        <TeamStats pokemonlist={PlayerTeam} />\n                    </div>\n                    <div className='controls'>\n                        <button  onClick={ this.onBattleButtonClick } >Battle</button>\n                        <button onClick={ this.onBackClick } >Back</button>\n                    </div>\n                </div>\n            </div>\n            )\n        } else {\n            return(\n                <div className='controlbox'>\n                    <div>\n                        <div className='controls'>\n                            <button  onClick={ this.onBattleButtonClick } >Battle</button>\n                            <button onClick = {this.onTeamStatsClick } >Team Stats</button>\n                            <button  onClick={ this.onRefreshButtonClick } >Restart</button>\n                            <button  onClick={ this.onMainMenuButtonClick } >Exit</button>\n                        </div>\n                        <div className='prompt-text'>\n                            <h2>{mainprompt}</h2>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n} \n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controls);","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport { startGame, seeIntructions } from '../../actions';\n\nimport './StartMenu.css';\n\n\n\nconst mapStateToProps = state => {\n    return {\n        screen: state.currentTurn.screen\n    }   \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        onStartGame: () => dispatch(startGame()),\n        onSeeInstructions: () => dispatch(seeIntructions())\n    }\n}\n\nclass StartMenu extends Component {\n    \n    onStartGameClick = () => {\n        this.props.onStartGame();\n    }\n\n    onSeeInstructionsClick = () => {\n        this.props.onSeeInstructions();\n    }\n\n    render(){\n        return(\n            <Fragment>\n                <header className=\"App-header\">\n                    <h1>Pokébattle v1.0</h1>\n                 </header>\n                 <div className=\"containerFlex\">\n                    <div id=\"pokeheader\">\n                            <img alt='pokemonheader' src={require(`./assets/pokeheader.png`)} />\n                    </div>\n                    <div id='options'>\n                        <div id='option'>\n                            <button id='optionbutton' onClick={ this.onStartGameClick }>Play Pokébattle</button>\n                        </div>\n                        <div id='option'>\n                            <button id='optionbutton' onClick={ this.onSeeInstructionsClick }>Instructions</button> \n                        </div>\n                    </div>   \n                    <div id=\"poketeam\">\n                        <img alt='pokemonteam' src={require(`./assets/poketeam.png`)} />\n                    </div>\n                </div>\n            </Fragment>\n                )\n    }\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartMenu);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport { launchMenu } from '../../actions';\nimport './Instructions.css';\n\nconst mapStateToProps = state => {\n    return {\n        screen: state.currentTurn.screen\n    }   \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        onLaunchMenu: () => dispatch(launchMenu())\n    }\n}\n\n\nclass Instructions extends Component {\n\n    onMainMenuButtonClick = () => {\n  \n        this.props.onLaunchMenu();\n    \n      }\n\n    render(){\n        return(\n            <Fragment>\n                <header className=\"App-header\">\n                    <h1>Pokébattle v1.0</h1>\n                    <button className=\"pushLeft menuButton\" onClick={ this.onMainMenuButtonClick }>Back</button>\n                 </header>\n                 <div className=\"rules\">\n                     <div>\n                         <h3>Pokébattle Rules</h3>\n                         <p>You begin with six random Pokémon. Your opponent gets six random pokemeon as well. When you select to Battle, if the combined power of your Pokémon exceeds that of your opponent, you win. Otherwise, you lose.</p>\n                         <p>Upon a victory each of your Pokémon will lose 5% of their power. You will be granted an opportunity to steal any of your opponent's Pokémon. This Pokémon will have a 100% power bar.</p>\n                         <p>Upon a loss, the game finishes.</p>\n                     </div>\n                     <div>\n                         <h3>Tips</h3>\n                         <p>To succeed in this game, it is important to know your Pokémon. It is vital to correctly swap your Pokémon.</p>\n                     </div>\n                     <div>\n                         <h3>About Pokébattle</h3>\n                         <p>Created by Nikolay Almazov in 2020.</p>\n                     </div>\n                 </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Instructions);","import React, { Component }  from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { requestPokemonPlayer, requestPokemonEnemy, currentScore,launchMenu } from '../../actions'\nimport PokemonTeam from '../../components/PokemonTeam/PokemonTeam';\nimport TeamStats from '../../components/TeamStats/TeamStats';\nimport Controls from '../../components/Controls/Controls';\nimport StartMenu from '../../components/StartMenu/StartMenu';\nimport Instructions from '../../components/Instructions/Instructions';\n\nconst mapStateToProps = state => {\n  return{\n    PlayerTeam: state.requestPokemonPlayer.pokemonlistPlayer,\n    isPendingPlayer: state.requestPokemonPlayer.isPending,\n    EnemyTeam: state.requestPokemonEnemy.pokemonlistEnemy,\n    isPendingEnemy: state.requestPokemonEnemy.isPending,\n    score: state.currentScore.score,\n    screen: state.currentTurn.screen,\n    mainprompt: state.currentTurn.mainprompt\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLaunchMenu: () => dispatch(launchMenu()),\n    onRequestPokemonPlayer: () => dispatch(requestPokemonPlayer()),\n    onRequestPokemonEnemy: () => dispatch(requestPokemonEnemy()),\n    onCurrentScore: () => dispatch(currentScore())\n  }\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    //StartGame\n    this.props.onLaunchMenu();\n    //Get Player Pokemon Team    \n    this.props.onRequestPokemonPlayer();\n    //Get Enemy Pokemon Team\n    this.props.onRequestPokemonEnemy();\n    //Reset Score\n    this.props.onCurrentScore();\n  }\n\n  render() {\n    const { PlayerTeam, isPendingPlayer, EnemyTeam, isPendingEnemy, score, mainprompt, screen }  = this.props;\n\n      if (screen === 'mainmenu') {\n        return <StartMenu />\n      } else {\n        if (screen === 'instructions') {\n          return <Instructions />\n        } else {\n          return(\n            <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Pokébattle v1.0</h1>\n                <h2 className='push score'>Current Score: {score}</h2>\n            </header>\n            <div className=\"game\">\n                <h2>Your Team</h2>\n                <div className=\"gamerow\">\n                  <PokemonTeam id='Player' pokemonlist={PlayerTeam} status={isPendingPlayer} />\n                  <Controls pokemonlist={PlayerTeam} mainprompt={mainprompt} />\n                </div>\n                <h2>Red's Team</h2>\n                <div className=\"gamerow\">\n                  <PokemonTeam id='Enemy' pokemonlist={EnemyTeam} status={isPendingEnemy}/>\n                  <div className=\"controlbox\">\n                    <TeamStats pokemonlist={EnemyTeam}/>\n                  </div>\n                </div>\n            </div>\n          </div>\n            );\n          }\n        }\n      }  \n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { getStat } from './getStat';\n\nexport const getPower = (array) => {\n\n    const totalSpeed = getStat(`speed`, array);\n      const totalSpecDef = getStat(`special-defense`, array);\n      const totalSpecAttack = getStat(`special-attack`, array);\n      const totalDefense = getStat(`defense`, array);\n      const totalAttack = getStat(`attack`, array);\n      const totalHp = getStat(`hp`, array);\n\n      const totalPower = (totalSpeed + totalSpecDef + totalSpecAttack + totalDefense + totalAttack + totalHp);\n      return totalPower;\n    \n}","import {\n    REQUEST_PLAYER_POKE_PENDING,\n    REQUEST_PLAYER_POKE_SUCCESS,\n    REQUEST_PLAYER_POKE_FAILED,\n    REQUEST_ENEMY_POKE_PENDING,\n    REQUEST_ENEMY_POKE_SUCCESS,\n    REQUEST_ENEMY_POKE_FAILED,\n    SCORE_ZERO,\n    WIN_ROUND,\n    POKE_STEAL,\n    TURN_DATA_MAINMENU,\n    TURN_DATA_GAMESTART,\n    TURN_DATA_WIN,\n    TURN_DATA_STEAL,\n    TURN_DATA_LOSS,\n    VIEW_TEAM_STATS,\n    VIEW_CONTROLS_MAIN,\n    POKE_STEAL_STEAL_POKE,\n    POKE_STEAL_DISCARD_POKE,\n    SEE_INSTRUCTIONS\n\n} from './constants'\n\nimport { getPower } from './containers/App/getPower';\n\nconst initialStatePlayerPokemon = {\n    isPending: false,\n    pokemonlistPlayer: [],\n    error: '',\n    totalPlayerPower: 0\n}\n\nexport const requestPokemonPlayer = (state=initialStatePlayerPokemon, action={}) => {\n    switch(action.type){\n        case REQUEST_PLAYER_POKE_PENDING:\n            return Object.assign({}, state, {}, {isPending: true})\n\n        case REQUEST_PLAYER_POKE_SUCCESS:\n            return Object.assign({}, state, {}, {pokemonlistPlayer: action.payload, isPending: false, totalPlayerPower: getPower(action.payload)})\n\n        case REQUEST_PLAYER_POKE_FAILED:\n            return Object.assign({}, state, {}, {error: action.payload, isPending: false})\n        \n        case POKE_STEAL:\n            return Object.assign({}, state, {}, {pokemonlistPlayer: action.payload, isPending: false, totalPlayerPower: getPower(action.payload)})\n\n        default:\n            return state;\n    }\n}\n\nconst initialStateEnemyPokemon = {\n    isPending: false,\n    pokemonlistEnemy: [],\n    error: '',\n    totalEnemyPower: 0\n}\n\nexport const requestPokemonEnemy = (state=initialStateEnemyPokemon, action={}) => {\n    switch(action.type){\n        case REQUEST_ENEMY_POKE_PENDING:\n            return Object.assign({}, state, {}, {isPending: true})\n\n        case REQUEST_ENEMY_POKE_SUCCESS:\n            return Object.assign({}, state, {}, {pokemonlistEnemy: action.payload, isPending: false,  totalEnemyPower: getPower(action.payload)})\n        \n        case REQUEST_ENEMY_POKE_FAILED:\n            return Object.assign({}, state, {}, {error: action.payload, isPending: false})\n        \n        default:\n            return state;\n    }\n}\n\nconst initialStateScore = {\n    score: 0\n}\n\nexport const currentScore = (state=initialStateScore, action={}) => {\n    switch(action.type){\n        case SCORE_ZERO:\n            return Object.assign({}, state, {}, {score: action.payload})\n        case WIN_ROUND:\n            return Object.assign({}, state, {}, {score: action.score})\n            default:\n                return state;\n    }\n}\n\nconst initialStateTurn = {\n    turn: 'gamestart',\n    screen: 'mainmenu',\n    mainprompt: '',\n}\n\nexport const currentTurn = (state=initialStateTurn, action={}) => {\n    switch(action.type){\n        case TURN_DATA_MAINMENU:\n            return Object.assign({}, state, {}, {turn: action.payload.turn, screen: action.payload.screen, mainprompt: action.payload.mainprompt})\n        case TURN_DATA_GAMESTART:\n            return Object.assign({}, state, {}, {turn: action.payload.turn, screen: action.payload.screen, mainprompt: action.payload.mainprompt})\n        case TURN_DATA_WIN:\n            return Object.assign({}, state, {}, {turn: action.payload.turn, screen: action.payload.screen, mainprompt: action.payload.mainprompt})\n        case TURN_DATA_STEAL:\n            return Object.assign({}, state, {}, {turn: action.payload.turn, screen: action.payload.screen, mainprompt: action.payload.mainprompt})\n        case TURN_DATA_LOSS:\n            return Object.assign({}, state, {}, {turn: action.payload.turn, screen: action.payload.screen, mainprompt: action.payload.mainprompt})\n        case SEE_INSTRUCTIONS:\n            return Object.assign({}, state, {}, {screen: action.payload.screen})   \n        default:\n            return state;\n    }\n}\n\n\nconst initialStateControlBox = {\n    controls: 'control-buttons'\n}\n\nexport const controlBox = (state=initialStateControlBox, action={}) => {\n    switch(action.type){\n        case VIEW_TEAM_STATS:\n            return Object.assign({}, state, {}, {controls: action.payload.controls})\n        case VIEW_CONTROLS_MAIN:\n            return Object.assign({}, state, {}, {controls: action.payload.controls})\n        case TURN_DATA_GAMESTART:\n            return Object.assign({}, state, {}, {controls: action.payload.controls})\n        case TURN_DATA_WIN:\n            return Object.assign({}, state, {}, {controls: action.payload.controls})\n        case WIN_ROUND:\n            return Object.assign({}, state, {}, {controls: action.payload.controls})\n        case TURN_DATA_STEAL:\n            return Object.assign({}, state, {}, {controls: action.payload.controls})\n        case TURN_DATA_LOSS:\n            return Object.assign({}, state, {}, {controls: action.payload.controls})          \n        default:\n            return state;\n    }\n}\n\nconst initialStatePokeDiscard = {\n    pokeId: ''\n}\n\nexport const pokeDiscard = (state=initialStatePokeDiscard, action={}) => {\n    switch(action.type){\n        case POKE_STEAL_DISCARD_POKE:\n            return Object.assign({}, state, {}, {pokeId: action.payload.pokeId})\n        default:\n            return state;\n    }\n}\n\nconst initialStatePokeSteal = {\n    pokeId: ''\n}\n\nexport const pokeSteal = (state=initialStatePokeSteal, action={}) => {\n    switch(action.type){\n        case POKE_STEAL_STEAL_POKE:\n            return Object.assign({}, state, {}, {pokeId: action.payload.pokeId})\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createLogger } from 'redux-logger'\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { requestPokemonPlayer, requestPokemonEnemy, currentScore, currentTurn, controlBox, pokeDiscard, pokeSteal } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers( {requestPokemonPlayer, requestPokemonEnemy, currentScore, currentTurn, controlBox, pokeDiscard, pokeSteal} );\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}