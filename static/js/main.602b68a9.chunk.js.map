{"version":3,"sources":["containers/App/getRandomPokeIds.js","containers/App/getPokeURLs.js","containers/App/stealPoke.js","components/Pokemon/Pokemon.js","components/PokemonTeam/PokemonTeam.js","containers/App/getStat.js","components/TeamStats/TeamStats.js","containers/App/getPower.js","containers/App/App.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["getRandomIds","number","numArray","i","num","Math","floor","random","push","createPokeURLs","array","arrayURL","forEach","value","url","stealPoke","arrayPlayer","changeNumPlayer","arrayEnemy","changeNumEnemy","indexEnemy","indexPlayer","arrIndexPlayer","arrIndexEnemy","length","id","indexOf","Number","arr","arr1","splice","Pokemon","name","height","weight","className","alt","src","charAt","toUpperCase","slice","PokemonTeam","pokemonlist","map","pokemon","key","getStat","stat","statistic","statArray","stats","statfield","base_stat","TeamStats","totalSpeed","totalSpecDef","totalSpecAttack","totalDefense","totalAttack","totalHp","getPower","playerPower","enemyPower","App","onRefreshButtonClick","props","onRequestPokemonPlayer","onCurrentScore","setState","gameStatus","onBattleButtonClick","PlayerTeam","EnemyTeam","score","state","turnStatus","pokeSteal","window","prompt","pokeDiscard","onStealPokemon","onWinRound","onRequestPokemonEnemy","this","isPendingPlayer","isPendingEnemy","onClick","Component","connect","requestPokemonPlayer","pokemonlistPlayer","isPending","requestPokemonEnemy","pokemonlistEnemy","errorPlayer","error","errorEnemy","currentScore","dispatch","type","pokeIdsPlayer","pokeURLsPlayer","Promise","all","fetch","then","resp","r","json","data","payload","catch","pokeIdsEnemy","winRound","stealPokemon","Boolean","location","hostname","match","initialStatePlayerPokemon","initialStateEnemyPokemon","initialStateScore","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"kVAAaA,G,MAAe,SAACC,GAEzB,IADA,IAAIC,EAAW,GACNC,EAAE,EAAGA,EAAEF,EAAQE,IAAK,CAC3B,IAAIC,EAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EAC5CL,EAASM,KAAKJ,GAEhB,OAAOF,ICJEO,EAAiB,SAACC,GAC3B,IAAMC,EAAW,GASjB,OADAD,EAAME,SANS,SAACC,GACd,IACIC,EAAG,4CADED,EACF,KAEP,OADAF,EAASH,KAAKM,GACPH,KAGFA,GCZEI,EAAY,SAACC,EAAaC,EAAiBC,EAAYC,GAQhE,IANA,IAAIC,GAAc,EACdC,GAAe,EAEfC,EAAiB,GACjBC,EAAgB,GAEXpB,EAAI,EAAGA,EAAEa,EAAYQ,OAAQrB,IAClCmB,EAAed,KAAKQ,EAAYb,GAAGsB,IAGvC,IAAK,IAAItB,EAAI,EAAGA,EAAEe,EAAWM,OAAQrB,IACjCoB,EAAcf,KAAKU,EAAWf,GAAGsB,IAGrC,IAAiD,IAA7CH,EAAeI,QAAQT,KAAwE,IAA3CM,EAAcG,QAAQP,GAC1E,OAAOH,EAGH,IAAK,IAAIb,EAAI,EAAGA,EAAEe,EAAWM,OAAQrB,IACjC,GAAGwB,OAAOT,EAAWf,GAAGsB,MAAQN,EAAe,CAC3CC,EAAajB,EACb,MAIR,IAAK,IAAIA,EAAI,EAAGA,EAAEa,EAAYQ,OAAQrB,IAClC,GAAGa,EAAYb,GAAGsB,KAAOR,EAAgB,CACrCI,EAAclB,EACd,MAIZ,IAAIyB,EAAMV,EAAWE,GACjBS,EAAOb,EAEAa,EAAKC,OAAOT,EAAa,EAAGO,GAEvC,OAAOC,GCrBAE,G,MAfC,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMP,EAAwB,EAAxBA,GAAIQ,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAEhC,OACI,yBAAKC,UAAU,uCAAuCV,GAAG,QACrD,yBAAKW,IAAI,UAAUC,IAAG,mFAA8EZ,EAA9E,UACtB,6BACI,4BAAKO,EAAKM,OAAO,GAAGC,cAAeP,EAAKQ,MAAM,IAC9C,mCAASf,GACT,uCAAaQ,GACb,uCAAaC,OCadO,EAtBK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAEnB,OACI,kBAAC,WAAD,KAEIA,EAAYC,KAAI,SAACC,EAASzC,GACtB,OACC,kBAAC,EAAD,CACG0C,IAAK1C,EACL6B,KAAMU,EAAYvC,GAAG6B,KACrBP,GAAIiB,EAAYvC,GAAGsB,GACnBQ,OAAQS,EAAYvC,GAAG8B,OACvBC,OAAQQ,EAAYvC,GAAG+B,cCf9BY,G,MAAU,SAACC,EAAMrC,GAC1B,IAAIsC,EAAY,EAWhB,OAVItC,EAAME,SAAQ,SAACgC,EAASzC,GACpB,IAAI8C,EAAYvC,EAAMP,GAAG+C,MACzBD,EAAUrC,SAAQ,SAACuC,EAAWhD,GACtB8C,EAAU9C,GAAG4C,KAAKf,OAASe,IAC3BC,GAAwBC,EAAU9C,GAAGiD,iBAM9CJ,ICgBIK,EAxBG,SAAC,GAAqB,IAAnBX,EAAkB,EAAlBA,YAEXY,EAAaR,EAAQ,QAASJ,GAC9Ba,EAAeT,EAAQ,kBAAmBJ,GAC1Cc,EAAkBV,EAAQ,iBAAkBJ,GAC5Ce,EAAeX,EAAQ,UAAWJ,GAClCgB,EAAcZ,EAAQ,SAAUJ,GAChCiB,EAAUb,EAAQ,KAAMJ,GAE9B,OACI,yBAAKP,UAAU,kBAAkBV,GAAG,QAChC,6BACI,wBAAIA,GAAG,eAAP,cACA,sCAAa6B,GACb,gDAAsBC,EAAtB,KACA,+CAAqBC,GACrB,wCAAcC,GACd,uCAAaC,GACb,mCAASC,MCpBZC,EAAW,SAAClD,GAUnB,OARiBoC,EAAQ,QAASpC,GACboC,EAAQ,kBAAmBpC,GACxBoC,EAAQ,iBAAkBpC,GAC7BoC,EAAQ,UAAWpC,GACpBoC,EAAQ,SAAUpC,GACtBoC,EAAQ,KAAMpC,ICDhCmD,EAAc,EACdC,EAAa,EAwBXC,E,kDAEJ,aAAe,IAAD,8BACZ,gBAkBFC,qBAAuB,WAErB,EAAKC,MAAMC,yBAEX,EAAKD,MAAME,iBAEX,EAAKC,SAAU,CAACC,WAAW,oCAzBf,EA4BdC,oBAAsB,WAAO,IAAD,EACgB,EAAKL,MAAvCM,EADkB,EAClBA,WAAYC,EADM,EACNA,UAAWC,EADL,EACKA,MAM/B,GAJAZ,EAAcD,EAASW,GAEvBT,EAAaF,EAASY,GAElBX,GAAeC,EAAW,CAE3B,GAAI,aAAKY,MAAMC,WAAyB,CACnC,EAAKP,SAAU,CAAEO,WAAW,eAC5B,EAAKP,SAAU,CAACC,WAAW,wCAC3B,IAAIO,EAAYC,OAAOC,OAAP,6BAChBF,EAAYjD,OAAOiD,GACnB,IAAIG,EAAcF,OAAOC,OAAP,+BAClBC,EAAcpD,OAAQoD,GACnBH,GAAaG,GAEd,EAAKd,MAAMe,eAAeT,EAAYQ,EAAaP,EAAWI,GAEhE,EAAKR,SAAU,CAAEO,WAAW,WAC5B,EAAKP,SAAU,CAACC,WAAW,mCAE3B,EAAKD,SAAU,CAAEO,WAAW,WAC5B,EAAKP,SAAU,CAACC,WAAW,kCAQhC,EAAKJ,MAAMgB,WAAWR,EAAM,QAI7B,EAAKR,MAAMC,yBACX,EAAKD,MAAME,iBAEX,EAAKC,SAAU,CAACC,WAAW,wCAI7B,EAAKJ,MAAMiB,yBArEX,EAAKR,MAAQ,CACXL,WAAW,yBACXM,WAAW,UAJD,E,gEAWZQ,KAAKlB,MAAMC,yBAGXiB,KAAKlB,MAAMiB,wBAEXC,KAAKlB,MAAME,mB,+BA4DH,IAAD,EACoEgB,KAAKlB,MAAxEM,EADD,EACCA,WAAYa,EADb,EACaA,gBAAiBZ,EAD9B,EAC8BA,UAAWa,EADzC,EACyCA,eAAgBZ,EADzD,EACyDA,MAChE,OAAIW,GAAmBC,EACd,uCAGP,yBAAKlD,UAAU,OACb,4BAAQA,UAAU,cACd,kDACA,wBAAIA,UAAU,QAAQgD,KAAKT,MAAML,YACjC,4BAAQiB,QAAUH,KAAKnB,qBAAuB7B,UAAU,aAAxD,sBACA,4BAAQmD,QAAUH,KAAKb,oBAAsBnC,UAAU,aAAvD,UACA,wBAAIA,UAAU,mBAAd,kBAAgDsC,IAEpD,yBAAKtC,UAAU,QACX,yCACA,kBAAC,EAAD,CAAaO,YAAa6B,IAC1B,kBAAC,EAAD,CAAW7B,YAAa6B,IACxB,0CACA,kBAAC,EAAD,CAAa7B,YAAa8B,IAC1B,kBAAC,EAAD,CAAW9B,YAAa8B,U,GAlGlBe,aA2GHC,eAjIS,SAAAd,GACtB,MAAM,CACJH,WAAYG,EAAMe,qBAAqBC,kBACvCN,gBAAiBV,EAAMe,qBAAqBE,UAC5CnB,UAAWE,EAAMkB,oBAAoBC,iBACrCR,eAAgBX,EAAMkB,oBAAoBD,UAC1CG,YAAapB,EAAMe,qBAAqBM,MACxCC,WAAYtB,EAAMkB,oBAAoBG,MACtCtB,MAAOC,EAAMuB,aAAaxB,UAIH,SAACyB,GAC1B,MAAO,CACLhC,uBAAwB,kBAAMgC,GCPQ,SAACA,GACvCA,EAAS,CAAEC,KClB4B,gCDmBvC,IAAMC,EAAgBpG,EAAa,GAC7BqG,EAAiB5F,EAAe2F,GAEtCE,QAAQC,IAAIF,EAAe1D,KAAI,SAAA7B,GAAG,OAAI0F,MAAM1F,OACvC2F,MAAK,SAAAC,GAAI,OAAGJ,QAAQC,IAAMG,EAAK/D,KAAI,SAAAgE,GAAC,OAAIA,EAAEC,cAC1CH,MAAK,SAAAI,GAAI,OAAIX,EAAS,CAAEC,KCvBU,8BDuByBW,QAASD,OACpEE,OAAM,SAAAhB,GAAK,OAAIG,EAAS,CAAEC,KCvBO,6BDuB2BW,QAASf,WDA1Eb,sBAAuB,kBAAMgB,GCGQ,SAACA,GACtCA,EAAS,CAAEC,KCxB2B,+BDyBtC,IAAMa,EAAehH,EAAa,GAC5BqG,EAAiB5F,EAAeuG,GAEtCV,QAAQC,IAAIF,EAAe1D,KAAI,SAAA7B,GAAG,OAAI0F,MAAM1F,OACvC2F,MAAK,SAAAC,GAAI,OAAGJ,QAAQC,IAAMG,EAAK/D,KAAI,SAAAgE,GAAC,OAAIA,EAAEC,cAC1CH,MAAK,SAAAI,GAAI,OAAIX,EAAS,CAAEC,KC7BS,6BD6ByBW,QAASD,OACnEE,OAAM,SAAAhB,GAAK,OAAIG,EAAS,CAAEC,KC7BM,4BD6B2BW,QAASf,WDVzE5B,eAAgB,kBAAM+B,ECaS,CAC3BC,KC9BkB,aD+BlBW,QAAS,KDdb7B,WAAY,SAACR,GAAD,OAAWyB,ECiBH,SAAAzB,GAAK,MAAK,CAC9B0B,KChCqB,YDiCrB1B,SDnBgCwC,CAASxC,KACzCO,eAAgB,SAAChE,EAAaC,EAAiBC,EAAYC,GAA3C,OAA8D+E,ECqBtD,SAAClF,EAAaC,EAAiBC,EAAYC,GAA3C,MAA+D,CACnFgF,KClCkB,aDmClBW,QAAS/F,EAAUC,EAAaC,EAAiBC,EAAYC,IDvBsB+F,CAAalG,EAAaC,EAAiBC,EAAYC,QA+GnIqE,CAA6CzB,GGhIxCoD,QACW,cAA7BtC,OAAOuC,SAASC,UAEe,UAA7BxC,OAAOuC,SAASC,UAEhBxC,OAAOuC,SAASC,SAASC,MACvB,2DCLN,IAAMC,EAA4B,CAC9B5B,WAAW,EACXD,kBAAmB,GACnBK,MAAO,IAsBLyB,EAA2B,CAC7B7B,WAAW,EACXE,iBAAkB,GAClBE,MAAO,IAmBL0B,EAAoB,CACtBhD,MAAO,GCjDLiD,G,MAASC,0BACTC,EAAcC,YAAiB,CAACpC,qBDMF,WAAiD,IAAhDf,EAA+C,uDAAzC6C,EAA2BO,EAAc,uDAAP,GACzE,OAAOA,EAAO3B,MACV,IFpBmC,8BEqB/B,OAAO4B,OAAOC,OAAO,GAAItD,EAAO,GAAI,CAACiB,WAAW,IAEpD,IFtBmC,8BEuB/B,OAAOoC,OAAOC,OAAO,GAAItD,EAAO,GAAI,CAACgB,kBAAmBoC,EAAOhB,QAASnB,WAAW,IAEvF,IFxBkC,6BEyB9B,OAAOoC,OAAOC,OAAO,GAAItD,EAAO,GAAI,CAACqB,MAAO+B,EAAOhB,QAASnB,WAAW,IAEvE,IFbc,aEcd,OAAOoC,OAAOC,OAAO,GAAItD,EAAO,GAAI,CAACgB,kBAAmBoC,EAAOhB,QAASnB,WAAW,IAEvF,QACI,OAAOjB,ICrByCkB,oBD+BzB,WAAgD,IAA/ClB,EAA8C,uDAAxC8C,EAA0BM,EAAc,uDAAP,GACvE,OAAOA,EAAO3B,MACV,IFxCkC,6BEyC9B,OAAO4B,OAAOC,OAAO,GAAItD,EAAO,GAAI,CAACiB,WAAW,IAEpD,IF1CkC,6BE2C9B,OAAOoC,OAAOC,OAAO,GAAItD,EAAO,GAAI,CAACmB,iBAAkBiC,EAAOhB,QAASnB,WAAW,IAEtF,IF5CiC,4BE6C7B,OAAOoC,OAAOC,OAAO,GAAItD,EAAO,GAAI,CAACqB,MAAO+B,EAAOhB,QAASnB,WAAW,IAE3E,QACI,OAAOjB,IC3C8DuB,aDmDrD,WAAyC,IAAxCvB,EAAuC,uDAAjC+C,EAAmBK,EAAc,uDAAP,GACzD,OAAOA,EAAO3B,MACV,IFvDkB,aEwDd,OAAO4B,OAAOC,OAAO,GAAItD,EAAO,GAAI,CAACD,MAAOqD,EAAOhB,UACnD,IFtDa,YEuDT,OAAOiB,OAAOC,OAAO,GAAItD,EAAO,GAAI,CAACD,MAAOqD,EAAOrD,QACvD,QACI,OAAOC,MCzDjBuD,EAAQC,YAAYN,EAAaO,YAAgBC,IAAiBV,IAExEW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUN,MAASA,GACjB,kBAAC,EAAD,QAGJO,SAASC,eAAe,SF6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnC,MAAK,SAAAoC,GACJA,EAAaC,gBAEd/B,OAAM,SAAAhB,GACLgD,QAAQhD,MAAMA,EAAMiD,c","file":"static/js/main.602b68a9.chunk.js","sourcesContent":["export const getRandomIds = (number) => {\n    var numArray = [];\n    for (var i=0; i<number; i++) {\n      var num = Math.floor(Math.random() * 807) + 1;\n      numArray.push(num);\n    }\n    return numArray;\n  }","//Can change it to a Map method\n\nexport const createPokeURLs = (array) => {\n    const arrayURL = [];\n   \n    const addURL = (value) => {\n      var id = value;\n      var url = `https://pokeapi.co/api/v2/pokemon/${id}/`;\n      arrayURL.push(url);\n      return arrayURL;\n    }\n    array.forEach(addURL);\n    return arrayURL;\n  }","export const stealPoke = (arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy) => {\n    \n    let indexEnemy = -1;\n    let indexPlayer = -1;\n\n    let arrIndexPlayer = [];\n    let arrIndexEnemy = [];\n\n    for (let i = 0; i<arrayPlayer.length; i++) {\n        arrIndexPlayer.push(arrayPlayer[i].id)\n    }\n\n    for (let i = 0; i<arrayEnemy.length; i++) {\n        arrIndexEnemy.push(arrayEnemy[i].id)\n    }\n\n    if((arrIndexPlayer.indexOf(changeNumPlayer) === -1) || (arrIndexEnemy.indexOf(changeNumEnemy) === -1)) {\n        return arrayPlayer\n    } else {\n       \n            for (let i = 0; i<arrayEnemy.length; i++){\n                if(Number(arrayEnemy[i].id) === changeNumEnemy){\n                    indexEnemy = i;\n                    break\n                }\n            }\n        \n            for (let i = 0; i<arrayPlayer.length; i++){\n                if(arrayPlayer[i].id === changeNumPlayer){\n                    indexPlayer = i;\n                    break\n                } \n            }\n    \n        let arr = arrayEnemy[indexEnemy];\n        let arr1 = arrayPlayer;\n        //Works, but not sure how....\n        let arr2 = arr1.splice(indexPlayer, 1, arr);\n    \n        return arr1;\n    }\n}\n","import React from 'react';\nimport './Pokemon.css';\n\nconst Pokemon = ({name, id, height, weight}) => {\n\n    return(\n        <div className='dib br3 pa3 ma2 grow bw2 shadow-5 tc' id='card'>\n            <img alt='pokemon' src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`}/>\n            <div>\n                <h3>{name.charAt(0).toUpperCase()+ name.slice(1)}</h3>\n                <h3>ID: {id}</h3>\n                <h3>Height: {height}</h3>\n                <h3>Weight: {weight}</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default Pokemon;","import React, { Fragment } from 'react';\nimport Pokemon from '../Pokemon/Pokemon';\n\nconst PokemonTeam = ({ pokemonlist }) => {\n\n    return(\n        <Fragment>   \n            {\n            pokemonlist.map((pokemon, i) => {\n                return(\n                 <Pokemon \n                    key={i} \n                    name={pokemonlist[i].name} \n                    id={pokemonlist[i].id} \n                    height={pokemonlist[i].height} \n                    weight={pokemonlist[i].weight}\n                                                />\n                );\n            }\n        )\n    }\n</Fragment>\n    );\n   \n}\nexport default PokemonTeam;\n","export const getStat = (stat, array) => {\n    let statistic = 0;\n        array.forEach((pokemon, i) => {\n            let statArray = array[i].stats;\n            statArray.forEach((statfield, i) => {\n                if (statArray[i].stat.name === stat) {\n                    statistic = statistic + statArray[i].base_stat;\n                }\n            }\n            )\n         }\n        )\n    return statistic;\n  }","import React from 'react';\nimport './TeamStats.css';\nimport { getStat } from '../../containers/App/getStat.js';\n\nconst TeamStats = ({ pokemonlist }) => {\n    \n    const totalSpeed = getStat(`speed`, pokemonlist);\n    const totalSpecDef = getStat(`special-defense`, pokemonlist);\n    const totalSpecAttack = getStat(`special-attack`, pokemonlist);\n    const totalDefense = getStat(`defense`, pokemonlist);\n    const totalAttack = getStat(`attack`, pokemonlist);\n    const totalHp = getStat(`hp`, pokemonlist);\n\n    return(\n        <div className='dib br3 pa2 ma2' id='stat'>\n            <div>\n                <h2 id='headerstats'>Team Stats</h2>\n                <h3>Speed: { totalSpeed }</h3>\n                <h3>Special Defense: {totalSpecDef} </h3>\n                <h3>Special Attack: {totalSpecAttack}</h3>\n                <h3>Defense: {totalDefense}</h3>\n                <h3>Attack: {totalAttack}</h3>\n                <h3>HP: {totalHp}</h3>\n            </div>\n        </div>\n    );\n}\n\nexport default TeamStats;","import { getStat } from './getStat';\n\nexport const getPower = (array) => {\n\n    const totalSpeed = getStat(`speed`, array);\n      const totalSpecDef = getStat(`special-defense`, array);\n      const totalSpecAttack = getStat(`special-attack`, array);\n      const totalDefense = getStat(`defense`, array);\n      const totalAttack = getStat(`attack`, array);\n      const totalHp = getStat(`hp`, array);\n\n      const totalPower = (totalSpeed + totalSpecDef + totalSpecAttack + totalDefense + totalAttack + totalHp);\n      return totalPower;\n    \n}","import React, { Component }  from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { requestPokemonPlayer, requestPokemonEnemy, currentScore, winRound, stealPokemon } from '../../actions'\nimport PokemonTeam from '../../components/PokemonTeam/PokemonTeam';\nimport TeamStats from '../../components/TeamStats/TeamStats';\nimport { getPower } from './getPower';\n\nlet playerPower = 0;\nlet enemyPower = 0;\n\nconst mapStateToProps = state => {\n  return{\n    PlayerTeam: state.requestPokemonPlayer.pokemonlistPlayer,\n    isPendingPlayer: state.requestPokemonPlayer.isPending,\n    EnemyTeam: state.requestPokemonEnemy.pokemonlistEnemy,\n    isPendingEnemy: state.requestPokemonEnemy.isPending,\n    errorPlayer: state.requestPokemonPlayer.error,\n    errorEnemy: state.requestPokemonEnemy.error,\n    score: state.currentScore.score\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRequestPokemonPlayer: () => dispatch(requestPokemonPlayer()),\n    onRequestPokemonEnemy: () => dispatch(requestPokemonEnemy()),\n    onCurrentScore: () => dispatch(currentScore()),\n    onWinRound: (score) => dispatch(winRound(score)),\n    onStealPokemon: (arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy) => dispatch(stealPokemon(arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy))\n  }\n}\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      gameStatus: `Click Battle To Fight!`,\n      turnStatus: `battle`\n    }\n  }\n\n\n  componentDidMount() {\n    //Get Player Pokemon Team    \n    this.props.onRequestPokemonPlayer();\n    \n    //Get Enemy Pokemon Team\n    this.props.onRequestPokemonEnemy();\n    //Reset Score\n    this.props.onCurrentScore();\n  }\n\n  onRefreshButtonClick = () => {\n    //Refresh Player Pokemon Team  \n    this.props.onRequestPokemonPlayer();\n    //Reset The Score\n    this.props.onCurrentScore();\n    //Reset Game Status\n    this.setState( {gameStatus: `Use Your New Pokemon To Fight!`})\n  }\n\n  onBattleButtonClick = () => {\n    const { PlayerTeam, EnemyTeam, score }  = this.props;\n\n    playerPower = getPower(PlayerTeam);\n  \n    enemyPower = getPower(EnemyTeam);\n    // Win Condition\n    if (playerPower >= enemyPower){\n       //lets player steal a pokemon\n       if (this.state.turnStatus === `battle`) {\n            this.setState ({ turnStatus: `configteam`});\n            this.setState( {gameStatus: `You WON! Pick a Pokémon to steal`});\n            let pokeSteal = window.prompt(`Type Pokemon ID to steal!`);\n            pokeSteal = Number(pokeSteal);\n            let pokeDiscard = window.prompt(`Type Pokemon ID to discard!`);\n            pokeDiscard = Number (pokeDiscard);\n           if (pokeSteal && pokeDiscard){\n             //Steal Pokemon\n              this.props.onStealPokemon(PlayerTeam, pokeDiscard, EnemyTeam, pokeSteal);\n              \n            this.setState ({ turnStatus: `battle`});\n            this.setState( {gameStatus: `Click Battle to Fight Again!`});\n           } else {\n            this.setState ({ turnStatus: `battle`});\n            this.setState( {gameStatus: `Click Battle to Fight Again!`});\n           }\n            \n       } \n      //  else {\n      //   this.props.onCurrentScore();\n      //   this.setState( {gameStatus: `Pick a Pokémon to steal`})\n      //  }\n       this.props.onWinRound(score+1);\n    } \n    // Loss Condition\n    else {\n      this.props.onRequestPokemonPlayer();\n      this.props.onCurrentScore();\n      //Update Message\n      this.setState( {gameStatus: `YOU LOST. Click Battle for Revenge!`})\n    }\n\n    // refresh enemy team\n    this.props.onRequestPokemonEnemy();\n\n  }\n\n\n  render() {\n    const { PlayerTeam, isPendingPlayer, EnemyTeam, isPendingEnemy, score }  = this.props;\n    if (isPendingPlayer && isPendingEnemy ) {\n      return <h4>Loading</h4>\n    } else {\n      return(\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <h1>Pokébattle v1.0</h1>\n            <h1 className='push'>{this.state.gameStatus}</h1>\n            <button onClick={ this.onRefreshButtonClick } className='pushsmall'>Get New Pokémon</button>\n            <button onClick={ this.onBattleButtonClick } className='pushsmall'>Battle</button>\n            <h2 className='pushsmall score'>Current Score: {score}</h2>\n        </header>\n        <div className=\"game\">\n            <h2>Your Team</h2>\n            <PokemonTeam pokemonlist={PlayerTeam} />\n            <TeamStats pokemonlist={PlayerTeam}/>\n            <h2>Red's Team</h2>\n            <PokemonTeam pokemonlist={EnemyTeam} />\n            <TeamStats pokemonlist={EnemyTeam}/>\n        </div>\n      </div>\n    )\n    }\n    \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n    REQUEST_PLAYER_POKE_PENDING,\n    REQUEST_PLAYER_POKE_SUCCESS,\n    REQUEST_PLAYER_POKE_FAILED,\n    REQUEST_ENEMY_POKE_PENDING,\n    REQUEST_ENEMY_POKE_SUCCESS,\n    REQUEST_ENEMY_POKE_FAILED,\n    SCORE_ZERO,\n    WIN_ROUND,\n    POKE_STEAL\n\n} from './constants'\n\nimport { getRandomIds } from './containers/App/getRandomPokeIds';\nimport { createPokeURLs } from './containers/App/getPokeURLs';\nimport { stealPoke } from './containers/App/stealPoke';\n\n\nexport const requestPokemonPlayer = () => (dispatch) => {\n    dispatch({ type: REQUEST_PLAYER_POKE_PENDING });\n    const pokeIdsPlayer = getRandomIds(6);\n    const pokeURLsPlayer = createPokeURLs(pokeIdsPlayer);\n\n    Promise.all(pokeURLsPlayer.map(url => fetch(url)))\n        .then(resp=> Promise.all ( resp.map(r => r.json()) ))\n        .then(data => dispatch({ type: REQUEST_PLAYER_POKE_SUCCESS, payload: data}))\n        .catch(error => dispatch({ type: REQUEST_PLAYER_POKE_FAILED, payload: error }))\n}\n\nexport const requestPokemonEnemy = () => (dispatch) => {\n    dispatch({ type: REQUEST_ENEMY_POKE_PENDING });\n    const pokeIdsEnemy = getRandomIds(6);\n    const pokeURLsPlayer = createPokeURLs(pokeIdsEnemy);\n\n    Promise.all(pokeURLsPlayer.map(url => fetch(url)))\n        .then(resp=> Promise.all ( resp.map(r => r.json()) ))\n        .then(data => dispatch({ type: REQUEST_ENEMY_POKE_SUCCESS, payload: data}))\n        .catch(error => dispatch({ type: REQUEST_ENEMY_POKE_FAILED, payload: error }))\n}\n\nexport const currentScore = () => ({\n        type: SCORE_ZERO,\n        payload: 0\n})\n\nexport const winRound = score => ({\n    type: WIN_ROUND,\n    score\n})\n\nexport const stealPokemon = (arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy) => ({\n        type: POKE_STEAL,\n        payload: stealPoke(arrayPlayer, changeNumPlayer, arrayEnemy, changeNumEnemy)\n\n})\n\n\n\n","//Get Player Pokemon\nexport const REQUEST_PLAYER_POKE_PENDING = 'REQUEST_PLAYER_POKE_PENDING';\nexport const REQUEST_PLAYER_POKE_SUCCESS = 'REQUEST_PLAYER_POKE_SUCCESS';\nexport const REQUEST_PLAYER_POKE_FAILED = 'REQUEST_PLAYER_POKE_FAILED';\n\n//Get Enemy Pokemon\nexport const REQUEST_ENEMY_POKE_PENDING = 'REQUEST_ENEMY_POKE_PENDING';\nexport const REQUEST_ENEMY_POKE_SUCCESS = 'REQUEST_ENEMY_POKE_SUCCESS';\nexport const REQUEST_ENEMY_POKE_FAILED = 'REQUEST_ENEMY_POKE_FAILED';\n\n//Get Initial Score\nexport const SCORE_ZERO = 'SCORE_ZERO';\n\n//Round Win\nexport const WIN_ROUND = 'WIN_ROUND'\n\n//Poke Steal\nexport const POKE_STEAL = 'POKE_STEAL'","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    REQUEST_PLAYER_POKE_PENDING,\n    REQUEST_PLAYER_POKE_SUCCESS,\n    REQUEST_PLAYER_POKE_FAILED,\n    REQUEST_ENEMY_POKE_PENDING,\n    REQUEST_ENEMY_POKE_SUCCESS,\n    REQUEST_ENEMY_POKE_FAILED,\n    SCORE_ZERO,\n    WIN_ROUND,\n    POKE_STEAL\n\n} from './constants'\n\nconst initialStatePlayerPokemon = {\n    isPending: false,\n    pokemonlistPlayer: [],\n    error: ''\n}\n\nexport const requestPokemonPlayer = (state=initialStatePlayerPokemon, action={}) => {\n    switch(action.type){\n        case REQUEST_PLAYER_POKE_PENDING:\n            return Object.assign({}, state, {}, {isPending: true})\n\n        case REQUEST_PLAYER_POKE_SUCCESS:\n            return Object.assign({}, state, {}, {pokemonlistPlayer: action.payload, isPending: false})\n        \n        case REQUEST_PLAYER_POKE_FAILED:\n            return Object.assign({}, state, {}, {error: action.payload, isPending: false})\n        \n            case POKE_STEAL:\n            return Object.assign({}, state, {}, {pokemonlistPlayer: action.payload, isPending: false})\n\n        default:\n            return state;\n    }\n}\n\nconst initialStateEnemyPokemon = {\n    isPending: false,\n    pokemonlistEnemy: [],\n    error: ''\n}\n\nexport const requestPokemonEnemy = (state=initialStateEnemyPokemon, action={}) => {\n    switch(action.type){\n        case REQUEST_ENEMY_POKE_PENDING:\n            return Object.assign({}, state, {}, {isPending: true})\n\n        case REQUEST_ENEMY_POKE_SUCCESS:\n            return Object.assign({}, state, {}, {pokemonlistEnemy: action.payload, isPending: false})\n        \n        case REQUEST_ENEMY_POKE_FAILED:\n            return Object.assign({}, state, {}, {error: action.payload, isPending: false})\n        \n        default:\n            return state;\n    }\n}\n\nconst initialStateScore = {\n    score: 0\n}\n\nexport const currentScore = (state=initialStateScore, action={}) => {\n    switch(action.type){\n        case SCORE_ZERO:\n            return Object.assign({}, state, {}, {score: action.payload})\n            case WIN_ROUND:\n                return Object.assign({}, state, {}, {score: action.score})\n            default:\n                return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createLogger } from 'redux-logger'\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { requestPokemonPlayer, requestPokemonEnemy, currentScore } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers( {requestPokemonPlayer, requestPokemonEnemy, currentScore} );\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}