{"version":3,"sources":["components/Pokemon.js","components/PokemonTeam.js","components/TeamStats.js","containers/App.js","serviceWorker.js","index.js"],"names":["Pokemon","name","id","height","weight","className","alt","src","charAt","toUpperCase","slice","PokemonTeam","pokemonlist","map","pokemon","i","key","TeamStats","getStat","stat","array","statistic","forEach","statArray","stats","statfield","base_stat","totalSpeed","totalSpecDef","totalSpecAttack","totalDefense","totalAttack","totalHp","getRandomIds","numArray","num","Math","floor","random","push","createPokeURLs","arrayURL","value","url","App","onRefreshButtonClick","pokeIdsPlayer","pokeURLsPlayer","Promise","all","fetch","then","resp","r","json","result","setState","pokemonlistPlayer","totalPlayerPower","state","score","gameStatus","onBattleButtonClick","totalEnemyPower","Number","pokeIdsEnemy","pokeURLsenemy","pokemonlistEnemy","this","pokemonListInitPlayer","currentScore","pokemonListInitEnemy","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d7c2d3f9.chunk.js","sourcesContent":["import React from 'react';\nimport './Pokemon.css';\n\nconst Pokemon = ({name, id, height, weight}) => {\n\n    return(\n        <div className='dib br3 pa3 ma2 grow bw2 shadow-5 tc' id='card'>\n            <img alt='pokemon' src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`}/>\n            <div>\n                <h3>{name.charAt(0).toUpperCase()+ name.slice(1)}</h3>\n                <h3>ID: {id}</h3>\n                <h3>Height: {height}</h3>\n                <h3>Weight: {weight}</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default Pokemon;","import React, { Fragment } from 'react';\nimport Pokemon from './Pokemon';\n\nconst PokemonTeam = ({ pokemonlist }) => {\n\n    return(\n        <Fragment>   \n            {\n            pokemonlist.map((pokemon, i) => {\n                return(\n                 <Pokemon \n                    key={i} \n                    name={pokemonlist[i].name} \n                    id={pokemonlist[i].id} \n                    height={pokemonlist[i].height} \n                    weight={pokemonlist[i].weight}\n                                                />\n                );\n            }\n        )\n    }\n</Fragment>\n    );\n   \n}\nexport default PokemonTeam;\n","import React from 'react';\nimport './TeamStats.css';\n\nconst TeamStats = ({ pokemonlist }) => {\n    \n    const getStat = (stat, array) => {\n        let statistic = 0;\n            array.forEach((pokemon, i) => {\n                let statArray = pokemonlist[i].stats;\n                statArray.forEach((statfield, i) => {\n                    if (statArray[i].stat.name === stat) {\n                        statistic = statistic + statArray[i].base_stat;\n                    }\n                }\n                )\n             }\n            )\n        return statistic;\n    }\n    \n    const totalSpeed = getStat(`speed`, pokemonlist);\n    const totalSpecDef = getStat(`special-defense`, pokemonlist);\n    const totalSpecAttack = getStat(`special-attack`, pokemonlist);\n    const totalDefense = getStat(`defense`, pokemonlist);\n    const totalAttack = getStat(`attack`, pokemonlist);\n    const totalHp = getStat(`hp`, pokemonlist);\n\n    return(\n        <div className='dib br3 pa2 ma2' id='stat'>\n            <div>\n                <h2 id='headerstats'>Team Stats</h2>\n                <h3>Speed: { totalSpeed }</h3>\n                <h3>Special Defense: {totalSpecDef} </h3>\n                <h3>Special Attack: {totalSpecAttack}</h3>\n                <h3>Defense: {totalDefense}</h3>\n                <h3>Attack: {totalAttack}</h3>\n                <h3>HP: {totalHp}</h3>\n            </div>\n        </div>\n    );\n}\n\nexport default TeamStats;","import React, { Component }  from 'react';\nimport './App.css';\nimport PokemonTeam from '../components/PokemonTeam';\nimport TeamStats from '../components/TeamStats';\n\n\nconst getRandomIds = () => {\n  var numArray = [];\n  for (var i=0; i<6; i++) {\n    var num = Math.floor(Math.random() * 807) + 1;\n    numArray.push(num);\n  }\n  return numArray;\n}\n\nconst createPokeURLs = (array) => {\n  const arrayURL = [];\n \n  const addURL = (value) => {\n    var id = value;\n    var url = `https://pokeapi.co/api/v2/pokemon/${id}/`;\n    arrayURL.push(url);\n    return arrayURL;\n  }\n  array.forEach(addURL);\n  return arrayURL;\n}\n\nconst getStat = (stat, array) => {\n  let statistic = 0;\n      array.forEach((pokemon, i) => {\n          let statArray = array[i].stats;\n          statArray.forEach((statfield, i) => {\n              if (statArray[i].stat.name === stat) {\n                  statistic = statistic + statArray[i].base_stat;\n              }\n          }\n          )\n       }\n      )\n  return statistic;\n}\n\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      pokemonlistPlayer: [],\n      pokemonlistEnemy: [],\n      totalPlayerPower: 0,\n      totalEnemyPower: 0,\n      score: 0,\n      gameStatus: `Click Battle To Fight!`\n    }\n  }\n\n  componentDidMount() {\n    //Get Player Pokemon Team\n    const pokeIdsPlayer = getRandomIds();\n    const pokeURLsPlayer = createPokeURLs(pokeIdsPlayer);\n\n    Promise.all(pokeURLsPlayer.map(url => fetch(url)))\n    .then(resp=> Promise.all ( resp.map(r => r.json()) ))\n    .then (result => {\n      return this.setState({ pokemonlistPlayer: result });\n    });\n\n    //Get Enemy Pokemon Team\n    const pokeIdsEnemy = getRandomIds();\n    const pokeURLsenemy = createPokeURLs(pokeIdsEnemy);\n\n    Promise.all(pokeURLsenemy.map(url => fetch(url)))\n    .then(resp=> Promise.all ( resp.map(r => r.json()) ))\n    .then (result => {\n      return this.setState({ pokemonlistEnemy: result });\n    });\n\n    //Get Player Power\n    const totalPlayerSpeed = getStat(`speed`, this.state.pokemonlistPlayer);\n    const totalPlayerSpecDef = getStat(`special-defense`, this.state.pokemonlistPlayer);\n    const totalPlayerSpecAttack = getStat(`special-attack`, this.state.pokemonlistPlayer);\n    const totalPlayerDefense = getStat(`defense`, this.state.pokemonlistPlayer);\n    const totalPlayerAttack = getStat(`attack`, this.state.pokemonlistPlayer);\n    const totalPlayerHp = getStat(`hp`, this.state.pokemonlistPlayer);\n\n    const totalPlayerPower = (totalPlayerSpeed + totalPlayerSpecDef + totalPlayerSpecAttack + totalPlayerDefense + totalPlayerAttack + totalPlayerHp);\n    this.setState( {totalPlayerPower: totalPlayerPower})\n    \n    //Get Enemy Power\n    const totalEnemySpeed = getStat(`speed`, this.state.pokemonlistEnemy);\n    const totalEnemySpecDef = getStat(`special-defense`, this.state.pokemonlistEnemy);\n    const totalEnemySpecAttack = getStat(`special-attack`, this.state.pokemonlistEnemy);\n    const totalEnemyDefense = getStat(`defense`, this.state.pokemonlistEnemy);\n    const totalEnemyAttack = getStat(`attack`, this.state.pokemonlistEnemy);\n    const totalEnemyHp = getStat(`hp`, this.state.pokemonlistEnemy);\n\n    const totalEnemyPower = (totalEnemySpeed + totalEnemySpecDef + totalEnemySpecAttack + totalEnemyDefense + totalEnemyAttack + totalEnemyHp);\n    this.setState( {totalEnemyPower: totalEnemyPower})\n\n  }\n\n  onRefreshButtonClick = () => {\n    const pokeIdsPlayer = getRandomIds();\n    const pokeURLsPlayer = createPokeURLs(pokeIdsPlayer);\n\n    Promise.all(pokeURLsPlayer.map(url => fetch(url)))\n    .then(resp=> Promise.all ( resp.map(r => r.json()) ))\n    .then (result => {\n      return this.setState({ pokemonlistPlayer: result });\n    });\n    //Get Player Power\n    const totalPlayerSpeed = getStat(`speed`, this.state.pokemonlistPlayer);\n    const totalPlayerSpecDef = getStat(`special-defense`, this.state.pokemonlistPlayer);\n    const totalPlayerSpecAttack = getStat(`special-attack`, this.state.pokemonlistPlayer);\n    const totalPlayerDefense = getStat(`defense`, this.state.pokemonlistPlayer);\n    const totalPlayerAttack = getStat(`attack`, this.state.pokemonlistPlayer);\n    const totalPlayerHp = getStat(`hp`, this.state.pokemonlistPlayer);\n\n    const totalPlayerPower = (totalPlayerSpeed + totalPlayerSpecDef + totalPlayerSpecAttack + totalPlayerDefense + totalPlayerAttack + totalPlayerHp);\n    this.setState( {totalPlayerPower: totalPlayerPower})\n    this.setState({ score: 0})\n    this.setState( {gameStatus: `Use Your New Pokemon To Fight!`})\n  }\n\n  onBattleButtonClick = () => {\n    let score = this.state.score;\n    // Win Condition\n    if (this.state.totalPlayerPower > this.state.totalEnemyPower){\n      this.setState({score: (Number(score)+1)})\n      const pokeIdsEnemy = getRandomIds();\n      const pokeURLsenemy = createPokeURLs(pokeIdsEnemy);\n\n      Promise.all(pokeURLsenemy.map(url => fetch(url)))\n        .then(resp=> Promise.all ( resp.map(r => r.json()) ))\n        .then (result => {\n        return this.setState({ pokemonlistEnemy: result });\n       });\n\n       const totalEnemySpeed = getStat(`speed`, this.state.pokemonlistEnemy);\n       const totalEnemySpecDef = getStat(`special-defense`, this.state.pokemonlistEnemy);\n       const totalEnemySpecAttack = getStat(`special-attack`, this.state.pokemonlistEnemy);\n       const totalEnemyDefense = getStat(`defense`, this.state.pokemonlistEnemy);\n       const totalEnemyAttack = getStat(`attack`, this.state.pokemonlistEnemy);\n       const totalEnemyHp = getStat(`hp`, this.state.pokemonlistEnemy);\n   \n       const totalEnemyPower = (totalEnemySpeed + totalEnemySpecDef + totalEnemySpecAttack + totalEnemyDefense + totalEnemyAttack + totalEnemyHp);\n       this.setState( {totalEnemyPower: totalEnemyPower})\n\n       this.setState( {gameStatus: `YOU WON. Click Battle To Fight Again!`})\n\n    } \n    // Loss Condition\n    else {\n      this.setState({score: 0})\n      const pokeIdsPlayer = getRandomIds();\n      const pokeURLsPlayer = createPokeURLs(pokeIdsPlayer);\n\n      Promise.all(pokeURLsPlayer.map(url => fetch(url)))\n        .then(resp=> Promise.all ( resp.map(r => r.json()) ))\n        .then (result => {\n        return this.setState({ pokemonlistPlayer: result });\n        });\n\n      const pokeIdsEnemy = getRandomIds();\n      const pokeURLsenemy = createPokeURLs(pokeIdsEnemy);\n\n      Promise.all(pokeURLsenemy.map(url => fetch(url)))\n      .then(resp=> Promise.all ( resp.map(r => r.json()) ))\n      .then (result => {\n        return this.setState({ pokemonlistEnemy: result });\n      });\n      //Get Player Power\n      const totalPlayerSpeed = getStat(`speed`, this.state.pokemonlistPlayer);\n      const totalPlayerSpecDef = getStat(`special-defense`, this.state.pokemonlistPlayer);\n      const totalPlayerSpecAttack = getStat(`special-attack`, this.state.pokemonlistPlayer);\n      const totalPlayerDefense = getStat(`defense`, this.state.pokemonlistPlayer);\n      const totalPlayerAttack = getStat(`attack`, this.state.pokemonlistPlayer);\n      const totalPlayerHp = getStat(`hp`, this.state.pokemonlistPlayer);\n\n      const totalPlayerPower = (totalPlayerSpeed + totalPlayerSpecDef + totalPlayerSpecAttack + totalPlayerDefense + totalPlayerAttack + totalPlayerHp);\n      this.setState( {totalPlayerPower: totalPlayerPower})\n      \n      //Get Enemy Power\n      const totalEnemySpeed = getStat(`speed`, this.state.pokemonlistEnemy);\n      const totalEnemySpecDef = getStat(`special-defense`, this.state.pokemonlistEnemy);\n      const totalEnemySpecAttack = getStat(`special-attack`, this.state.pokemonlistEnemy);\n      const totalEnemyDefense = getStat(`defense`, this.state.pokemonlistEnemy);\n      const totalEnemyAttack = getStat(`attack`, this.state.pokemonlistEnemy);\n      const totalEnemyHp = getStat(`hp`, this.state.pokemonlistEnemy);\n\n      const totalEnemyPower = (totalEnemySpeed + totalEnemySpecDef + totalEnemySpecAttack + totalEnemyDefense + totalEnemyAttack + totalEnemyHp);\n      this.setState( {totalEnemyPower: totalEnemyPower})\n\n      //Update Message\n      this.setState( {gameStatus: `YOU LOST. Click Battle for Revenge!`})\n    }\n  }\n\n  render() {\n    const pokemonListInitPlayer = this.state.pokemonlistPlayer;\n    const currentScore = this.state.score;\n    const pokemonListInitEnemy = this.state.pokemonlistEnemy;\n    if (pokemonListInitPlayer === 0 && pokemonListInitEnemy === 0 ) {\n      return <h4>Loading</h4>\n    } else {\n      return(\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <h1>Pokebattle v1.0</h1>\n            <h1 className='push'>{this.state.gameStatus}</h1>\n            <button onClick={ this.onRefreshButtonClick } className='pushsmall'>Get New Pokemons</button>\n            <button onClick={ this.onBattleButtonClick } className='pushsmall'>Battle</button>\n            <h2 className='pushsmall score'>Current Score: {currentScore}</h2>\n        </header>\n        <div className=\"game\">\n            <h2>Your Team</h2>\n            <PokemonTeam pokemonlist={pokemonListInitPlayer} />\n            <TeamStats pokemonlist={pokemonListInitPlayer}/>\n            <h2>Red's Team</h2>\n            <PokemonTeam pokemonlist={pokemonListInitEnemy} />\n            <TeamStats pokemonlist={pokemonListInitEnemy}/>\n        </div>\n      </div>\n    )\n    }\n    \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}